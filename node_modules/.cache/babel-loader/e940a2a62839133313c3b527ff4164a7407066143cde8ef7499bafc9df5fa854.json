{"ast":null,"code":"import _objectSpread from\"/workspaces/educational2025/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useEffect,useRef}from\"react\";import*as THREE from'three';import{BloomEffect,EffectComposer,EffectPass,RenderPass,SMAAEffect,SMAAPreset}from'postprocessing';import{jsx as _jsx}from\"react/jsx-runtime\";const Hyperspeed=_ref=>{let{effectOptions={onSpeedUp:()=>{},onSlowDown:()=>{},distortion:'turbulentDistortion',length:400,roadWidth:10,islandWidth:2,lanesPerRoad:4,fov:90,fovSpeedUp:150,speedUp:2,carLightsFade:0.4,totalSideLightSticks:20,lightPairsPerRoadWay:40,shoulderLinesWidthPercentage:0.05,brokenLinesWidthPercentage:0.1,brokenLinesLengthPercentage:0.5,lightStickWidth:[0.12,0.5],lightStickHeight:[1.3,1.7],movingAwaySpeed:[60,80],movingCloserSpeed:[-120,-160],carLightsLength:[400*0.03,400*0.2],carLightsRadius:[0.05,0.14],carWidthPercentage:[0.3,0.5],carShiftX:[-0.8,0.8],carFloorSeparation:[0,5],colors:{roadColor:0x080808,islandColor:0x0a0a0a,background:0x000000,shoulderLines:0xFFFFFF,brokenLines:0xFFFFFF,leftCars:[0xD856BF,0x6750A2,0xC247AC],rightCars:[0x03B3C3,0x0E5EA5,0x324555],sticks:0x03B3C3}}}=_ref;const hyperspeed=useRef(null);const appRef=useRef(null);useEffect(()=>{if(appRef.current){appRef.current.dispose();const container=document.getElementById('lights');if(container){while(container.firstChild){container.removeChild(container.firstChild);}}}const mountainUniforms={uFreq:{value:new THREE.Vector3(3,6,10)},uAmp:{value:new THREE.Vector3(30,30,20)}};const xyUniforms={uFreq:{value:new THREE.Vector2(5,2)},uAmp:{value:new THREE.Vector2(25,15)}};const LongRaceUniforms={uFreq:{value:new THREE.Vector2(2,3)},uAmp:{value:new THREE.Vector2(35,10)}};const turbulentUniforms={uFreq:{value:new THREE.Vector4(4,8,8,1)},uAmp:{value:new THREE.Vector4(25,5,10,10)}};const deepUniforms={uFreq:{value:new THREE.Vector2(4,8)},uAmp:{value:new THREE.Vector2(10,20)},uPowY:{value:new THREE.Vector2(20,2)}};let nsin=val=>Math.sin(val)*0.5+0.5;const distortions={mountainDistortion:{uniforms:mountainUniforms,getDistortion:\"\\n          uniform vec3 uAmp;\\n          uniform vec3 uFreq;\\n          #define PI 3.14159265358979\\n          float nsin(float val){\\n            return sin(val) * 0.5 + 0.5;\\n          }\\n          vec3 getDistortion(float progress){\\n            float movementProgressFix = 0.02;\\n            return vec3( \\n              cos(progress * PI * uFreq.x + uTime) * uAmp.x - cos(movementProgressFix * PI * uFreq.x + uTime) * uAmp.x,\\n              nsin(progress * PI * uFreq.y + uTime) * uAmp.y - nsin(movementProgressFix * PI * uFreq.y + uTime) * uAmp.y,\\n              nsin(progress * PI * uFreq.z + uTime) * uAmp.z - nsin(movementProgressFix * PI * uFreq.z + uTime) * uAmp.z\\n            );\\n          }\\n        \",getJS:(progress,time)=>{let movementProgressFix=0.02;let uFreq=mountainUniforms.uFreq.value;let uAmp=mountainUniforms.uAmp.value;let distortion=new THREE.Vector3(Math.cos(progress*Math.PI*uFreq.x+time)*uAmp.x-Math.cos(movementProgressFix*Math.PI*uFreq.x+time)*uAmp.x,nsin(progress*Math.PI*uFreq.y+time)*uAmp.y-nsin(movementProgressFix*Math.PI*uFreq.y+time)*uAmp.y,nsin(progress*Math.PI*uFreq.z+time)*uAmp.z-nsin(movementProgressFix*Math.PI*uFreq.z+time)*uAmp.z);let lookAtAmp=new THREE.Vector3(2,2,2);let lookAtOffset=new THREE.Vector3(0,0,-5);return distortion.multiply(lookAtAmp).add(lookAtOffset);}},xyDistortion:{uniforms:xyUniforms,getDistortion:\"\\n          uniform vec2 uFreq;\\n          uniform vec2 uAmp;\\n          #define PI 3.14159265358979\\n          vec3 getDistortion(float progress){\\n            float movementProgressFix = 0.02;\\n            return vec3( \\n              cos(progress * PI * uFreq.x + uTime) * uAmp.x - cos(movementProgressFix * PI * uFreq.x + uTime) * uAmp.x,\\n              sin(progress * PI * uFreq.y + PI/2. + uTime) * uAmp.y - sin(movementProgressFix * PI * uFreq.y + PI/2. + uTime) * uAmp.y,\\n              0.\\n            );\\n          }\\n        \",getJS:(progress,time)=>{let movementProgressFix=0.02;let uFreq=xyUniforms.uFreq.value;let uAmp=xyUniforms.uAmp.value;let distortion=new THREE.Vector3(Math.cos(progress*Math.PI*uFreq.x+time)*uAmp.x-Math.cos(movementProgressFix*Math.PI*uFreq.x+time)*uAmp.x,Math.sin(progress*Math.PI*uFreq.y+time+Math.PI/2)*uAmp.y-Math.sin(movementProgressFix*Math.PI*uFreq.y+time+Math.PI/2)*uAmp.y,0);let lookAtAmp=new THREE.Vector3(2,0.4,1);let lookAtOffset=new THREE.Vector3(0,0,-3);return distortion.multiply(lookAtAmp).add(lookAtOffset);}},LongRaceDistortion:{uniforms:LongRaceUniforms,getDistortion:\"\\n          uniform vec2 uFreq;\\n          uniform vec2 uAmp;\\n          #define PI 3.14159265358979\\n          vec3 getDistortion(float progress){\\n            float camProgress = 0.0125;\\n            return vec3( \\n              sin(progress * PI * uFreq.x + uTime) * uAmp.x - sin(camProgress * PI * uFreq.x + uTime) * uAmp.x,\\n              sin(progress * PI * uFreq.y + uTime) * uAmp.y - sin(camProgress * PI * uFreq.y + uTime) * uAmp.y,\\n              0.\\n            );\\n          }\\n        \",getJS:(progress,time)=>{let camProgress=0.0125;let uFreq=LongRaceUniforms.uFreq.value;let uAmp=LongRaceUniforms.uAmp.value;let distortion=new THREE.Vector3(Math.sin(progress*Math.PI*uFreq.x+time)*uAmp.x-Math.sin(camProgress*Math.PI*uFreq.x+time)*uAmp.x,Math.sin(progress*Math.PI*uFreq.y+time)*uAmp.y-Math.sin(camProgress*Math.PI*uFreq.y+time)*uAmp.y,0);let lookAtAmp=new THREE.Vector3(1,1,0);let lookAtOffset=new THREE.Vector3(0,0,-5);return distortion.multiply(lookAtAmp).add(lookAtOffset);}},turbulentDistortion:{uniforms:turbulentUniforms,getDistortion:\"\\n          uniform vec4 uFreq;\\n          uniform vec4 uAmp;\\n          float nsin(float val){\\n            return sin(val) * 0.5 + 0.5;\\n          }\\n          #define PI 3.14159265358979\\n          float getDistortionX(float progress){\\n            return (\\n              cos(PI * progress * uFreq.r + uTime) * uAmp.r +\\n              pow(cos(PI * progress * uFreq.g + uTime * (uFreq.g / uFreq.r)), 2. ) * uAmp.g\\n            );\\n          }\\n          float getDistortionY(float progress){\\n            return (\\n              -nsin(PI * progress * uFreq.b + uTime) * uAmp.b +\\n              -pow(nsin(PI * progress * uFreq.a + uTime / (uFreq.b / uFreq.a)), 5.) * uAmp.a\\n            );\\n          }\\n          vec3 getDistortion(float progress){\\n            return vec3(\\n              getDistortionX(progress) - getDistortionX(0.0125),\\n              getDistortionY(progress) - getDistortionY(0.0125),\\n              0.\\n            );\\n          }\\n        \",getJS:(progress,time)=>{const uFreq=turbulentUniforms.uFreq.value;const uAmp=turbulentUniforms.uAmp.value;const getX=p=>Math.cos(Math.PI*p*uFreq.x+time)*uAmp.x+Math.pow(Math.cos(Math.PI*p*uFreq.y+time*(uFreq.y/uFreq.x)),2)*uAmp.y;const getY=p=>-nsin(Math.PI*p*uFreq.z+time)*uAmp.z-Math.pow(nsin(Math.PI*p*uFreq.w+time/(uFreq.z/uFreq.w)),5)*uAmp.w;let distortion=new THREE.Vector3(getX(progress)-getX(progress+0.007),getY(progress)-getY(progress+0.007),0);let lookAtAmp=new THREE.Vector3(-2,-5,0);let lookAtOffset=new THREE.Vector3(0,0,-10);return distortion.multiply(lookAtAmp).add(lookAtOffset);}},turbulentDistortionStill:{uniforms:turbulentUniforms,getDistortion:\"\\n          uniform vec4 uFreq;\\n          uniform vec4 uAmp;\\n          float nsin(float val){\\n            return sin(val) * 0.5 + 0.5;\\n          }\\n          #define PI 3.14159265358979\\n          float getDistortionX(float progress){\\n            return (\\n              cos(PI * progress * uFreq.r) * uAmp.r +\\n              pow(cos(PI * progress * uFreq.g * (uFreq.g / uFreq.r)), 2. ) * uAmp.g\\n            );\\n          }\\n          float getDistortionY(float progress){\\n            return (\\n              -nsin(PI * progress * uFreq.b) * uAmp.b +\\n              -pow(nsin(PI * progress * uFreq.a / (uFreq.b / uFreq.a)), 5.) * uAmp.a\\n            );\\n          }\\n          vec3 getDistortion(float progress){\\n            return vec3(\\n              getDistortionX(progress) - getDistortionX(0.02),\\n              getDistortionY(progress) - getDistortionY(0.02),\\n              0.\\n            );\\n          }\\n        \"},deepDistortionStill:{uniforms:deepUniforms,getDistortion:\"\\n          uniform vec4 uFreq;\\n          uniform vec4 uAmp;\\n          uniform vec2 uPowY;\\n          float nsin(float val){\\n            return sin(val) * 0.5 + 0.5;\\n          }\\n          #define PI 3.14159265358979\\n          float getDistortionX(float progress){\\n            return (\\n              sin(progress * PI * uFreq.x) * uAmp.x * 2.\\n            );\\n          }\\n          float getDistortionY(float progress){\\n            return (\\n              pow(abs(progress * uPowY.x), uPowY.y) + sin(progress * PI * uFreq.y) * uAmp.y\\n            );\\n          }\\n          vec3 getDistortion(float progress){\\n            return vec3(\\n              getDistortionX(progress) - getDistortionX(0.02),\\n              getDistortionY(progress) - getDistortionY(0.05),\\n              0.\\n            );\\n          }\\n        \"},deepDistortion:{uniforms:deepUniforms,getDistortion:\"\\n          uniform vec4 uFreq;\\n          uniform vec4 uAmp;\\n          uniform vec2 uPowY;\\n          float nsin(float val){\\n            return sin(val) * 0.5 + 0.5;\\n          }\\n          #define PI 3.14159265358979\\n          float getDistortionX(float progress){\\n            return (\\n              sin(progress * PI * uFreq.x + uTime) * uAmp.x\\n            );\\n          }\\n          float getDistortionY(float progress){\\n            return (\\n              pow(abs(progress * uPowY.x), uPowY.y) + sin(progress * PI * uFreq.y + uTime) * uAmp.y\\n            );\\n          }\\n          vec3 getDistortion(float progress){\\n            return vec3(\\n              getDistortionX(progress) - getDistortionX(0.02),\\n              getDistortionY(progress) - getDistortionY(0.02),\\n              0.\\n            );\\n          }\\n        \",getJS:(progress,time)=>{const uFreq=deepUniforms.uFreq.value;const uAmp=deepUniforms.uAmp.value;const uPowY=deepUniforms.uPowY.value;const getX=p=>Math.sin(p*Math.PI*uFreq.x+time)*uAmp.x;const getY=p=>Math.pow(p*uPowY.x,uPowY.y)+Math.sin(p*Math.PI*uFreq.y+time)*uAmp.y;let distortion=new THREE.Vector3(getX(progress)-getX(progress+0.01),getY(progress)-getY(progress+0.01),0);let lookAtAmp=new THREE.Vector3(-2,-4,0);let lookAtOffset=new THREE.Vector3(0,0,-10);return distortion.multiply(lookAtAmp).add(lookAtOffset);}}};class App{constructor(container){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this.options=options;if(this.options.distortion==null){this.options.distortion={uniforms:distortion_uniforms,getDistortion:distortion_vertex};}this.container=container;this.renderer=new THREE.WebGLRenderer({antialias:false,alpha:true});this.renderer.setSize(container.offsetWidth,container.offsetHeight,false);this.renderer.setPixelRatio(window.devicePixelRatio);this.composer=new EffectComposer(this.renderer);container.append(this.renderer.domElement);this.camera=new THREE.PerspectiveCamera(options.fov,container.offsetWidth/container.offsetHeight,0.1,10000);this.camera.position.z=-5;this.camera.position.y=8;this.camera.position.x=0;this.scene=new THREE.Scene();this.scene.background=null;let fog=new THREE.Fog(options.colors.background,options.length*0.2,options.length*500);this.scene.fog=fog;this.fogUniforms={fogColor:{value:fog.color},fogNear:{value:fog.near},fogFar:{value:fog.far}};this.clock=new THREE.Clock();this.assets={};this.disposed=false;this.road=new Road(this,options);this.leftCarLights=new CarLights(this,options,options.colors.leftCars,options.movingAwaySpeed,new THREE.Vector2(0,1-options.carLightsFade));this.rightCarLights=new CarLights(this,options,options.colors.rightCars,options.movingCloserSpeed,new THREE.Vector2(1,0+options.carLightsFade));this.leftSticks=new LightsSticks(this,options);this.fovTarget=options.fov;this.speedUpTarget=0;this.speedUp=0;this.timeOffset=0;this.tick=this.tick.bind(this);this.init=this.init.bind(this);this.setSize=this.setSize.bind(this);this.onMouseDown=this.onMouseDown.bind(this);this.onMouseUp=this.onMouseUp.bind(this);window.addEventListener(\"resize\",this.onWindowResize.bind(this));}onWindowResize(){const width=this.container.offsetWidth;const height=this.container.offsetHeight;this.renderer.setSize(width,height);this.camera.aspect=width/height;this.camera.updateProjectionMatrix();this.composer.setSize(width,height);}initPasses(){this.renderPass=new RenderPass(this.scene,this.camera);this.bloomPass=new EffectPass(this.camera,new BloomEffect({luminanceThreshold:0.2,luminanceSmoothing:0,resolutionScale:1}));const smaaPass=new EffectPass(this.camera,new SMAAEffect({preset:SMAAPreset.MEDIUM,searchImage:SMAAEffect.searchImageDataURL,areaImage:SMAAEffect.areaImageDataURL}));this.renderPass.renderToScreen=false;this.bloomPass.renderToScreen=false;smaaPass.renderToScreen=true;this.composer.addPass(this.renderPass);this.composer.addPass(this.bloomPass);this.composer.addPass(smaaPass);}loadAssets(){const assets=this.assets;return new Promise(resolve=>{const manager=new THREE.LoadingManager(resolve);const searchImage=new Image();const areaImage=new Image();assets.smaa={};searchImage.addEventListener(\"load\",function(){assets.smaa.search=this;manager.itemEnd(\"smaa-search\");});areaImage.addEventListener(\"load\",function(){assets.smaa.area=this;manager.itemEnd(\"smaa-area\");});manager.itemStart(\"smaa-search\");manager.itemStart(\"smaa-area\");searchImage.src=SMAAEffect.searchImageDataURL;areaImage.src=SMAAEffect.areaImageDataURL;});}init(){this.initPasses();const options=this.options;this.road.init();this.leftCarLights.init();this.leftCarLights.mesh.position.setX(-options.roadWidth/2-options.islandWidth/2);this.rightCarLights.init();this.rightCarLights.mesh.position.setX(options.roadWidth/2+options.islandWidth/2);this.leftSticks.init();this.leftSticks.mesh.position.setX(-(options.roadWidth+options.islandWidth/2));this.container.addEventListener(\"mousedown\",this.onMouseDown);this.container.addEventListener(\"mouseup\",this.onMouseUp);this.container.addEventListener(\"mouseout\",this.onMouseUp);this.tick();}onMouseDown(ev){if(this.options.onSpeedUp)this.options.onSpeedUp(ev);this.fovTarget=this.options.fovSpeedUp;this.speedUpTarget=this.options.speedUp;}onMouseUp(ev){if(this.options.onSlowDown)this.options.onSlowDown(ev);this.fovTarget=this.options.fov;this.speedUpTarget=0;}update(delta){let lerpPercentage=Math.exp(-(-60*Math.log2(1-0.1))*delta);this.speedUp+=lerp(this.speedUp,this.speedUpTarget,lerpPercentage,0.00001);this.timeOffset+=this.speedUp*delta;let time=this.clock.elapsedTime+this.timeOffset;this.rightCarLights.update(time);this.leftCarLights.update(time);this.leftSticks.update(time);this.road.update(time);let updateCamera=false;let fovChange=lerp(this.camera.fov,this.fovTarget,lerpPercentage);if(fovChange!==0){this.camera.fov+=fovChange*delta*6;updateCamera=true;}if(this.options.distortion.getJS){const distortion=this.options.distortion.getJS(0.025,time);this.camera.lookAt(new THREE.Vector3(this.camera.position.x+distortion.x,this.camera.position.y+distortion.y,this.camera.position.z+distortion.z));updateCamera=true;}if(updateCamera){this.camera.updateProjectionMatrix();}if(this.options.isHyper){console.log(this.options.isHyper);}}render(delta){this.composer.render(delta);}dispose(){this.disposed=true;if(this.renderer){this.renderer.dispose();}if(this.composer){this.composer.dispose();}if(this.scene){this.scene.clear();}window.removeEventListener(\"resize\",this.onWindowResize.bind(this));if(this.container){this.container.removeEventListener(\"mousedown\",this.onMouseDown);this.container.removeEventListener(\"mouseup\",this.onMouseUp);this.container.removeEventListener(\"mouseout\",this.onMouseUp);}}setSize(width,height,updateStyles){this.composer.setSize(width,height,updateStyles);}tick(){if(this.disposed||!this)return;if(resizeRendererToDisplaySize(this.renderer,this.setSize)){const canvas=this.renderer.domElement;this.camera.aspect=canvas.clientWidth/canvas.clientHeight;this.camera.updateProjectionMatrix();}const delta=this.clock.getDelta();this.render(delta);this.update(delta);requestAnimationFrame(this.tick);}}const distortion_uniforms={uDistortionX:{value:new THREE.Vector2(80,3)},uDistortionY:{value:new THREE.Vector2(-40,2.5)}};const distortion_vertex=\"\\n      #define PI 3.14159265358979\\n      uniform vec2 uDistortionX;\\n      uniform vec2 uDistortionY;\\n      float nsin(float val){\\n        return sin(val) * 0.5 + 0.5;\\n      }\\n      vec3 getDistortion(float progress){\\n        progress = clamp(progress, 0., 1.);\\n        float xAmp = uDistortionX.r;\\n        float xFreq = uDistortionX.g;\\n        float yAmp = uDistortionY.r;\\n        float yFreq = uDistortionY.g;\\n        return vec3( \\n          xAmp * nsin(progress * PI * xFreq - PI / 2.),\\n          yAmp * nsin(progress * PI * yFreq - PI / 2.),\\n          0.\\n        );\\n      }\\n    \";const random=base=>{if(Array.isArray(base))return Math.random()*(base[1]-base[0])+base[0];return Math.random()*base;};const pickRandom=arr=>{if(Array.isArray(arr))return arr[Math.floor(Math.random()*arr.length)];return arr;};function lerp(current,target){let speed=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.1;let limit=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0.001;let change=(target-current)*speed;if(Math.abs(change)<limit){change=target-current;}return change;}class CarLights{constructor(webgl,options,colors,speed,fade){this.webgl=webgl;this.options=options;this.colors=colors;this.speed=speed;this.fade=fade;}init(){const options=this.options;let curve=new THREE.LineCurve3(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,-1));let geometry=new THREE.TubeGeometry(curve,40,1,8,false);let instanced=new THREE.InstancedBufferGeometry().copy(geometry);instanced.instanceCount=options.lightPairsPerRoadWay*2;let laneWidth=options.roadWidth/options.lanesPerRoad;let aOffset=[];let aMetrics=[];let aColor=[];let colors=this.colors;if(Array.isArray(colors)){colors=colors.map(c=>new THREE.Color(c));}else{colors=new THREE.Color(colors);}for(let i=0;i<options.lightPairsPerRoadWay;i++){let radius=random(options.carLightsRadius);let length=random(options.carLightsLength);let speed=random(this.speed);let carLane=i%options.lanesPerRoad;let laneX=carLane*laneWidth-options.roadWidth/2+laneWidth/2;let carWidth=random(options.carWidthPercentage)*laneWidth;let carShiftX=random(options.carShiftX)*laneWidth;laneX+=carShiftX;let offsetY=random(options.carFloorSeparation)+radius*1.3;let offsetZ=-random(options.length);aOffset.push(laneX-carWidth/2);aOffset.push(offsetY);aOffset.push(offsetZ);aOffset.push(laneX+carWidth/2);aOffset.push(offsetY);aOffset.push(offsetZ);aMetrics.push(radius);aMetrics.push(length);aMetrics.push(speed);aMetrics.push(radius);aMetrics.push(length);aMetrics.push(speed);let color=pickRandom(colors);aColor.push(color.r);aColor.push(color.g);aColor.push(color.b);aColor.push(color.r);aColor.push(color.g);aColor.push(color.b);}instanced.setAttribute(\"aOffset\",new THREE.InstancedBufferAttribute(new Float32Array(aOffset),3,false));instanced.setAttribute(\"aMetrics\",new THREE.InstancedBufferAttribute(new Float32Array(aMetrics),3,false));instanced.setAttribute(\"aColor\",new THREE.InstancedBufferAttribute(new Float32Array(aColor),3,false));let material=new THREE.ShaderMaterial({fragmentShader:carLightsFragment,vertexShader:carLightsVertex,transparent:true,uniforms:Object.assign({uTime:{value:0},uTravelLength:{value:options.length},uFade:{value:this.fade}},this.webgl.fogUniforms,options.distortion.uniforms)});material.onBeforeCompile=shader=>{shader.vertexShader=shader.vertexShader.replace(\"#include <getDistortion_vertex>\",options.distortion.getDistortion);};let mesh=new THREE.Mesh(instanced,material);mesh.frustumCulled=false;this.webgl.scene.add(mesh);this.mesh=mesh;}update(time){this.mesh.material.uniforms.uTime.value=time;}}const carLightsFragment=\"\\n      #define USE_FOG;\\n      \".concat(THREE.ShaderChunk[\"fog_pars_fragment\"],\"\\n      varying vec3 vColor;\\n      varying vec2 vUv; \\n      uniform vec2 uFade;\\n      void main() {\\n        vec3 color = vec3(vColor);\\n        float alpha = smoothstep(uFade.x, uFade.y, vUv.x);\\n        gl_FragColor = vec4(color, alpha);\\n        if (gl_FragColor.a < 0.0001) discard;\\n        \").concat(THREE.ShaderChunk[\"fog_fragment\"],\"\\n      }\\n    \");const carLightsVertex=\"\\n      #define USE_FOG;\\n      \".concat(THREE.ShaderChunk[\"fog_pars_vertex\"],\"\\n      attribute vec3 aOffset;\\n      attribute vec3 aMetrics;\\n      attribute vec3 aColor;\\n      uniform float uTravelLength;\\n      uniform float uTime;\\n      varying vec2 vUv; \\n      varying vec3 vColor; \\n      #include <getDistortion_vertex>\\n      void main() {\\n        vec3 transformed = position.xyz;\\n        float radius = aMetrics.r;\\n        float myLength = aMetrics.g;\\n        float speed = aMetrics.b;\\n\\n        transformed.xy *= radius;\\n        transformed.z *= myLength;\\n\\n        transformed.z += myLength - mod(uTime * speed + aOffset.z, uTravelLength);\\n        transformed.xy += aOffset.xy;\\n\\n        float progress = abs(transformed.z / uTravelLength);\\n        transformed.xyz += getDistortion(progress);\\n\\n        vec4 mvPosition = modelViewMatrix * vec4(transformed, 1.);\\n        gl_Position = projectionMatrix * mvPosition;\\n        vUv = uv;\\n        vColor = aColor;\\n        \").concat(THREE.ShaderChunk[\"fog_vertex\"],\"\\n      }\\n    \");class LightsSticks{constructor(webgl,options){this.webgl=webgl;this.options=options;}init(){const options=this.options;const geometry=new THREE.PlaneGeometry(1,1);let instanced=new THREE.InstancedBufferGeometry().copy(geometry);let totalSticks=options.totalSideLightSticks;instanced.instanceCount=totalSticks;let stickoffset=options.length/(totalSticks-1);const aOffset=[];const aColor=[];const aMetrics=[];let colors=options.colors.sticks;if(Array.isArray(colors)){colors=colors.map(c=>new THREE.Color(c));}else{colors=new THREE.Color(colors);}for(let i=0;i<totalSticks;i++){let width=random(options.lightStickWidth);let height=random(options.lightStickHeight);aOffset.push((i-1)*stickoffset*2+stickoffset*Math.random());let color=pickRandom(colors);aColor.push(color.r);aColor.push(color.g);aColor.push(color.b);aMetrics.push(width);aMetrics.push(height);}instanced.setAttribute(\"aOffset\",new THREE.InstancedBufferAttribute(new Float32Array(aOffset),1,false));instanced.setAttribute(\"aColor\",new THREE.InstancedBufferAttribute(new Float32Array(aColor),3,false));instanced.setAttribute(\"aMetrics\",new THREE.InstancedBufferAttribute(new Float32Array(aMetrics),2,false));const material=new THREE.ShaderMaterial({fragmentShader:sideSticksFragment,vertexShader:sideSticksVertex,side:THREE.DoubleSide,uniforms:Object.assign({uTravelLength:{value:options.length},uTime:{value:0}},this.webgl.fogUniforms,options.distortion.uniforms)});material.onBeforeCompile=shader=>{shader.vertexShader=shader.vertexShader.replace(\"#include <getDistortion_vertex>\",options.distortion.getDistortion);};const mesh=new THREE.Mesh(instanced,material);mesh.frustumCulled=false;this.webgl.scene.add(mesh);this.mesh=mesh;}update(time){this.mesh.material.uniforms.uTime.value=time;}}const sideSticksVertex=\"\\n      #define USE_FOG;\\n      \".concat(THREE.ShaderChunk[\"fog_pars_vertex\"],\"\\n      attribute float aOffset;\\n      attribute vec3 aColor;\\n      attribute vec2 aMetrics;\\n      uniform float uTravelLength;\\n      uniform float uTime;\\n      varying vec3 vColor;\\n      mat4 rotationY( in float angle ) {\\n        return mat4(\\tcos(angle),\\t\\t0,\\t\\tsin(angle),\\t0,\\n                     0,\\t\\t1.0,\\t\\t\\t 0,\\t0,\\n                -sin(angle),\\t0,\\t\\tcos(angle),\\t0,\\n                0, \\t\\t0,\\t\\t\\t\\t0,\\t1);\\n      }\\n      #include <getDistortion_vertex>\\n      void main(){\\n        vec3 transformed = position.xyz;\\n        float width = aMetrics.x;\\n        float height = aMetrics.y;\\n\\n        transformed.xy *= vec2(width, height);\\n        float time = mod(uTime * 60. * 2. + aOffset, uTravelLength);\\n\\n        transformed = (rotationY(3.14/2.) * vec4(transformed,1.)).xyz;\\n\\n        transformed.z += - uTravelLength + time;\\n\\n        float progress = abs(transformed.z / uTravelLength);\\n        transformed.xyz += getDistortion(progress);\\n\\n        transformed.y += height / 2.;\\n        transformed.x += -width / 2.;\\n        vec4 mvPosition = modelViewMatrix * vec4(transformed, 1.);\\n        gl_Position = projectionMatrix * mvPosition;\\n        vColor = aColor;\\n        \").concat(THREE.ShaderChunk[\"fog_vertex\"],\"\\n      }\\n    \");const sideSticksFragment=\"\\n      #define USE_FOG;\\n      \".concat(THREE.ShaderChunk[\"fog_pars_fragment\"],\"\\n      varying vec3 vColor;\\n      void main(){\\n        vec3 color = vec3(vColor);\\n        gl_FragColor = vec4(color,1.);\\n        \").concat(THREE.ShaderChunk[\"fog_fragment\"],\"\\n      }\\n    \");class Road{constructor(webgl,options){this.webgl=webgl;this.options=options;this.uTime={value:0};}createPlane(side,width,isRoad){const options=this.options;let segments=100;const geometry=new THREE.PlaneGeometry(isRoad?options.roadWidth:options.islandWidth,options.length,20,segments);let uniforms={uTravelLength:{value:options.length},uColor:{value:new THREE.Color(isRoad?options.colors.roadColor:options.colors.islandColor)},uTime:this.uTime};if(isRoad){uniforms=Object.assign(uniforms,{uLanes:{value:options.lanesPerRoad},uBrokenLinesColor:{value:new THREE.Color(options.colors.brokenLines)},uShoulderLinesColor:{value:new THREE.Color(options.colors.shoulderLines)},uShoulderLinesWidthPercentage:{value:options.shoulderLinesWidthPercentage},uBrokenLinesLengthPercentage:{value:options.brokenLinesLengthPercentage},uBrokenLinesWidthPercentage:{value:options.brokenLinesWidthPercentage}});}const material=new THREE.ShaderMaterial({fragmentShader:isRoad?roadFragment:islandFragment,vertexShader:roadVertex,side:THREE.DoubleSide,uniforms:Object.assign(uniforms,this.webgl.fogUniforms,options.distortion.uniforms)});material.onBeforeCompile=shader=>{shader.vertexShader=shader.vertexShader.replace(\"#include <getDistortion_vertex>\",options.distortion.getDistortion);};const mesh=new THREE.Mesh(geometry,material);mesh.rotation.x=-Math.PI/2;mesh.position.z=-options.length/2;mesh.position.x+=(this.options.islandWidth/2+options.roadWidth/2)*side;this.webgl.scene.add(mesh);return mesh;}init(){this.leftRoadWay=this.createPlane(-1,this.options.roadWidth,true);this.rightRoadWay=this.createPlane(1,this.options.roadWidth,true);this.island=this.createPlane(0,this.options.islandWidth,false);}update(time){this.uTime.value=time;}}const roadBaseFragment=\"\\n      #define USE_FOG;\\n      varying vec2 vUv; \\n      uniform vec3 uColor;\\n      uniform float uTime;\\n      #include <roadMarkings_vars>\\n      \".concat(THREE.ShaderChunk[\"fog_pars_fragment\"],\"\\n      void main() {\\n        vec2 uv = vUv;\\n        vec3 color = vec3(uColor);\\n        #include <roadMarkings_fragment>\\n        gl_FragColor = vec4(color, 1.);\\n        \").concat(THREE.ShaderChunk[\"fog_fragment\"],\"\\n      }\\n    \");const islandFragment=roadBaseFragment.replace(\"#include <roadMarkings_fragment>\",\"\").replace(\"#include <roadMarkings_vars>\",\"\");const roadMarkings_vars=\"\\n      uniform float uLanes;\\n      uniform vec3 uBrokenLinesColor;\\n      uniform vec3 uShoulderLinesColor;\\n      uniform float uShoulderLinesWidthPercentage;\\n      uniform float uBrokenLinesWidthPercentage;\\n      uniform float uBrokenLinesLengthPercentage;\\n      highp float random(vec2 co) {\\n        highp float a = 12.9898;\\n        highp float b = 78.233;\\n        highp float c = 43758.5453;\\n        highp float dt = dot(co.xy, vec2(a, b));\\n        highp float sn = mod(dt, 3.14);\\n        return fract(sin(sn) * c);\\n      }\\n    \";const roadMarkings_fragment=\"\\n      uv.y = mod(uv.y + uTime * 0.05, 1.);\\n      float laneWidth = 1.0 / uLanes;\\n      float brokenLineWidth = laneWidth * uBrokenLinesWidthPercentage;\\n      float laneEmptySpace = 1. - uBrokenLinesLengthPercentage;\\n\\n      float brokenLines = step(1.0 - brokenLineWidth, fract(uv.x * 2.0)) * step(laneEmptySpace, fract(uv.y * 10.0));\\n      float sideLines = step(1.0 - brokenLineWidth, fract((uv.x - laneWidth * (uLanes - 1.0)) * 2.0)) + step(brokenLineWidth, uv.x);\\n\\n      brokenLines = mix(brokenLines, sideLines, uv.x);\\n    \";const roadFragment=roadBaseFragment.replace(\"#include <roadMarkings_fragment>\",roadMarkings_fragment).replace(\"#include <roadMarkings_vars>\",roadMarkings_vars);const roadVertex=\"\\n      #define USE_FOG;\\n      uniform float uTime;\\n      \".concat(THREE.ShaderChunk[\"fog_pars_vertex\"],\"\\n      uniform float uTravelLength;\\n      varying vec2 vUv; \\n      #include <getDistortion_vertex>\\n      void main() {\\n        vec3 transformed = position.xyz;\\n        vec3 distortion = getDistortion((transformed.y + uTravelLength / 2.) / uTravelLength);\\n        transformed.x += distortion.x;\\n        transformed.z += distortion.y;\\n        transformed.y += -1. * distortion.z;  \\n        \\n        vec4 mvPosition = modelViewMatrix * vec4(transformed, 1.);\\n        gl_Position = projectionMatrix * mvPosition;\\n        vUv = uv;\\n        \").concat(THREE.ShaderChunk[\"fog_vertex\"],\"\\n      }\\n    \");function resizeRendererToDisplaySize(renderer,setSize){const canvas=renderer.domElement;const width=canvas.clientWidth;const height=canvas.clientHeight;const needResize=canvas.width!==width||canvas.height!==height;if(needResize){setSize(width,height,false);}return needResize;}(function(){const container=document.getElementById('lights');const options=_objectSpread({},effectOptions);options.distortion=distortions[options.distortion];const myApp=new App(container,options);appRef.current=myApp;myApp.loadAssets().then(myApp.init);})();return()=>{if(appRef.current){appRef.current.dispose();}};},[effectOptions]);return/*#__PURE__*/_jsx(\"div\",{id:\"lights\",className:\"w-full h-full\",ref:hyperspeed});};export default Hyperspeed;","map":{"version":3,"names":["useEffect","useRef","THREE","BloomEffect","EffectComposer","EffectPass","RenderPass","SMAAEffect","SMAAPreset","jsx","_jsx","Hyperspeed","_ref","effectOptions","onSpeedUp","onSlowDown","distortion","length","roadWidth","islandWidth","lanesPerRoad","fov","fovSpeedUp","speedUp","carLightsFade","totalSideLightSticks","lightPairsPerRoadWay","shoulderLinesWidthPercentage","brokenLinesWidthPercentage","brokenLinesLengthPercentage","lightStickWidth","lightStickHeight","movingAwaySpeed","movingCloserSpeed","carLightsLength","carLightsRadius","carWidthPercentage","carShiftX","carFloorSeparation","colors","roadColor","islandColor","background","shoulderLines","brokenLines","leftCars","rightCars","sticks","hyperspeed","appRef","current","dispose","container","document","getElementById","firstChild","removeChild","mountainUniforms","uFreq","value","Vector3","uAmp","xyUniforms","Vector2","LongRaceUniforms","turbulentUniforms","Vector4","deepUniforms","uPowY","nsin","val","Math","sin","distortions","mountainDistortion","uniforms","getDistortion","getJS","progress","time","movementProgressFix","cos","PI","x","y","z","lookAtAmp","lookAtOffset","multiply","add","xyDistortion","LongRaceDistortion","camProgress","turbulentDistortion","getX","p","pow","getY","w","turbulentDistortionStill","deepDistortionStill","deepDistortion","App","constructor","options","arguments","undefined","distortion_uniforms","distortion_vertex","renderer","WebGLRenderer","antialias","alpha","setSize","offsetWidth","offsetHeight","setPixelRatio","window","devicePixelRatio","composer","append","domElement","camera","PerspectiveCamera","position","scene","Scene","fog","Fog","fogUniforms","fogColor","color","fogNear","near","fogFar","far","clock","Clock","assets","disposed","road","Road","leftCarLights","CarLights","rightCarLights","leftSticks","LightsSticks","fovTarget","speedUpTarget","timeOffset","tick","bind","init","onMouseDown","onMouseUp","addEventListener","onWindowResize","width","height","aspect","updateProjectionMatrix","initPasses","renderPass","bloomPass","luminanceThreshold","luminanceSmoothing","resolutionScale","smaaPass","preset","MEDIUM","searchImage","searchImageDataURL","areaImage","areaImageDataURL","renderToScreen","addPass","loadAssets","Promise","resolve","manager","LoadingManager","Image","smaa","search","itemEnd","area","itemStart","src","mesh","setX","ev","update","delta","lerpPercentage","exp","log2","lerp","elapsedTime","updateCamera","fovChange","lookAt","isHyper","console","log","render","clear","removeEventListener","updateStyles","resizeRendererToDisplaySize","canvas","clientWidth","clientHeight","getDelta","requestAnimationFrame","uDistortionX","uDistortionY","random","base","Array","isArray","pickRandom","arr","floor","target","speed","limit","change","abs","webgl","fade","curve","LineCurve3","geometry","TubeGeometry","instanced","InstancedBufferGeometry","copy","instanceCount","laneWidth","aOffset","aMetrics","aColor","map","c","Color","i","radius","carLane","laneX","carWidth","offsetY","offsetZ","push","r","g","b","setAttribute","InstancedBufferAttribute","Float32Array","material","ShaderMaterial","fragmentShader","carLightsFragment","vertexShader","carLightsVertex","transparent","Object","assign","uTime","uTravelLength","uFade","onBeforeCompile","shader","replace","Mesh","frustumCulled","concat","ShaderChunk","PlaneGeometry","totalSticks","stickoffset","sideSticksFragment","sideSticksVertex","side","DoubleSide","createPlane","isRoad","segments","uColor","uLanes","uBrokenLinesColor","uShoulderLinesColor","uShoulderLinesWidthPercentage","uBrokenLinesLengthPercentage","uBrokenLinesWidthPercentage","roadFragment","islandFragment","roadVertex","rotation","leftRoadWay","rightRoadWay","island","roadBaseFragment","roadMarkings_vars","roadMarkings_fragment","needResize","_objectSpread","myApp","then","id","className","ref"],"sources":["/workspaces/educational2025/src/Home/HyperSpeed/hyper-speed.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport * as THREE from 'three';\nimport { BloomEffect, EffectComposer, EffectPass, RenderPass, SMAAEffect, SMAAPreset } from 'postprocessing';\n\nconst Hyperspeed = ({ effectOptions = {\n  onSpeedUp: () => { },\n  onSlowDown: () => { },\n  distortion: 'turbulentDistortion',\n  length: 400,\n  roadWidth: 10,\n  islandWidth: 2,\n  lanesPerRoad: 4,\n  fov: 90,\n  fovSpeedUp: 150,\n  speedUp: 2,\n  carLightsFade: 0.4,\n  totalSideLightSticks: 20,\n  lightPairsPerRoadWay: 40,\n  shoulderLinesWidthPercentage: 0.05,\n  brokenLinesWidthPercentage: 0.1,\n  brokenLinesLengthPercentage: 0.5,\n  lightStickWidth: [0.12, 0.5],\n  lightStickHeight: [1.3, 1.7],\n  movingAwaySpeed: [60, 80],\n  movingCloserSpeed: [-120, -160],\n  carLightsLength: [400 * 0.03, 400 * 0.2],\n  carLightsRadius: [0.05, 0.14],\n  carWidthPercentage: [0.3, 0.5],\n  carShiftX: [-0.8, 0.8],\n  carFloorSeparation: [0, 5],\n  colors: {\n    roadColor: 0x080808,\n    islandColor: 0x0a0a0a,\n    background: 0x000000,\n    shoulderLines: 0xFFFFFF,\n    brokenLines: 0xFFFFFF,\n    leftCars: [0xD856BF, 0x6750A2, 0xC247AC],\n    rightCars: [0x03B3C3, 0x0E5EA5, 0x324555],\n    sticks: 0x03B3C3,\n  }\n} }) => {\n  const hyperspeed = useRef(null);\n  const appRef = useRef(null);\n  \n  useEffect(() => {\n    if (appRef.current) {\n      appRef.current.dispose();\n      const container = document.getElementById('lights');\n      if (container) {\n        while (container.firstChild) {\n          container.removeChild(container.firstChild);\n        }\n      }\n    }\n\n    const mountainUniforms = {\n      uFreq: { value: new THREE.Vector3(3, 6, 10) },\n      uAmp: { value: new THREE.Vector3(30, 30, 20) }\n    };\n\n    const xyUniforms = {\n      uFreq: { value: new THREE.Vector2(5, 2) },\n      uAmp: { value: new THREE.Vector2(25, 15) }\n    };\n\n    const LongRaceUniforms = {\n      uFreq: { value: new THREE.Vector2(2, 3) },\n      uAmp: { value: new THREE.Vector2(35, 10) }\n    };\n\n    const turbulentUniforms = {\n      uFreq: { value: new THREE.Vector4(4, 8, 8, 1) },\n      uAmp: { value: new THREE.Vector4(25, 5, 10, 10) }\n    };\n\n    const deepUniforms = {\n      uFreq: { value: new THREE.Vector2(4, 8) },\n      uAmp: { value: new THREE.Vector2(10, 20) },\n      uPowY: { value: new THREE.Vector2(20, 2) }\n    };\n\n    let nsin = val => Math.sin(val) * 0.5 + 0.5;\n\n    const distortions = {\n      mountainDistortion: {\n        uniforms: mountainUniforms,\n        getDistortion: `\n          uniform vec3 uAmp;\n          uniform vec3 uFreq;\n          #define PI 3.14159265358979\n          float nsin(float val){\n            return sin(val) * 0.5 + 0.5;\n          }\n          vec3 getDistortion(float progress){\n            float movementProgressFix = 0.02;\n            return vec3( \n              cos(progress * PI * uFreq.x + uTime) * uAmp.x - cos(movementProgressFix * PI * uFreq.x + uTime) * uAmp.x,\n              nsin(progress * PI * uFreq.y + uTime) * uAmp.y - nsin(movementProgressFix * PI * uFreq.y + uTime) * uAmp.y,\n              nsin(progress * PI * uFreq.z + uTime) * uAmp.z - nsin(movementProgressFix * PI * uFreq.z + uTime) * uAmp.z\n            );\n          }\n        `,\n        getJS: (progress, time) => {\n          let movementProgressFix = 0.02;\n          let uFreq = mountainUniforms.uFreq.value;\n          let uAmp = mountainUniforms.uAmp.value;\n          let distortion = new THREE.Vector3(\n            Math.cos(progress * Math.PI * uFreq.x + time) * uAmp.x -\n            Math.cos(movementProgressFix * Math.PI * uFreq.x + time) * uAmp.x,\n            nsin(progress * Math.PI * uFreq.y + time) * uAmp.y -\n            nsin(movementProgressFix * Math.PI * uFreq.y + time) * uAmp.y,\n            nsin(progress * Math.PI * uFreq.z + time) * uAmp.z -\n            nsin(movementProgressFix * Math.PI * uFreq.z + time) * uAmp.z\n          );\n          let lookAtAmp = new THREE.Vector3(2, 2, 2);\n          let lookAtOffset = new THREE.Vector3(0, 0, -5);\n          return distortion.multiply(lookAtAmp).add(lookAtOffset);\n        }\n      },\n      xyDistortion: {\n        uniforms: xyUniforms,\n        getDistortion: `\n          uniform vec2 uFreq;\n          uniform vec2 uAmp;\n          #define PI 3.14159265358979\n          vec3 getDistortion(float progress){\n            float movementProgressFix = 0.02;\n            return vec3( \n              cos(progress * PI * uFreq.x + uTime) * uAmp.x - cos(movementProgressFix * PI * uFreq.x + uTime) * uAmp.x,\n              sin(progress * PI * uFreq.y + PI/2. + uTime) * uAmp.y - sin(movementProgressFix * PI * uFreq.y + PI/2. + uTime) * uAmp.y,\n              0.\n            );\n          }\n        `,\n        getJS: (progress, time) => {\n          let movementProgressFix = 0.02;\n          let uFreq = xyUniforms.uFreq.value;\n          let uAmp = xyUniforms.uAmp.value;\n          let distortion = new THREE.Vector3(\n            Math.cos(progress * Math.PI * uFreq.x + time) * uAmp.x -\n            Math.cos(movementProgressFix * Math.PI * uFreq.x + time) * uAmp.x,\n            Math.sin(progress * Math.PI * uFreq.y + time + Math.PI / 2) * uAmp.y -\n            Math.sin(movementProgressFix * Math.PI * uFreq.y + time + Math.PI / 2) * uAmp.y,\n            0\n          );\n          let lookAtAmp = new THREE.Vector3(2, 0.4, 1);\n          let lookAtOffset = new THREE.Vector3(0, 0, -3);\n          return distortion.multiply(lookAtAmp).add(lookAtOffset);\n        }\n      },\n      LongRaceDistortion: {\n        uniforms: LongRaceUniforms,\n        getDistortion: `\n          uniform vec2 uFreq;\n          uniform vec2 uAmp;\n          #define PI 3.14159265358979\n          vec3 getDistortion(float progress){\n            float camProgress = 0.0125;\n            return vec3( \n              sin(progress * PI * uFreq.x + uTime) * uAmp.x - sin(camProgress * PI * uFreq.x + uTime) * uAmp.x,\n              sin(progress * PI * uFreq.y + uTime) * uAmp.y - sin(camProgress * PI * uFreq.y + uTime) * uAmp.y,\n              0.\n            );\n          }\n        `,\n        getJS: (progress, time) => {\n          let camProgress = 0.0125;\n          let uFreq = LongRaceUniforms.uFreq.value;\n          let uAmp = LongRaceUniforms.uAmp.value;\n          let distortion = new THREE.Vector3(\n            Math.sin(progress * Math.PI * uFreq.x + time) * uAmp.x -\n            Math.sin(camProgress * Math.PI * uFreq.x + time) * uAmp.x,\n            Math.sin(progress * Math.PI * uFreq.y + time) * uAmp.y -\n            Math.sin(camProgress * Math.PI * uFreq.y + time) * uAmp.y,\n            0\n          );\n          let lookAtAmp = new THREE.Vector3(1, 1, 0);\n          let lookAtOffset = new THREE.Vector3(0, 0, -5);\n          return distortion.multiply(lookAtAmp).add(lookAtOffset);\n        }\n      },\n      turbulentDistortion: {\n        uniforms: turbulentUniforms,\n        getDistortion: `\n          uniform vec4 uFreq;\n          uniform vec4 uAmp;\n          float nsin(float val){\n            return sin(val) * 0.5 + 0.5;\n          }\n          #define PI 3.14159265358979\n          float getDistortionX(float progress){\n            return (\n              cos(PI * progress * uFreq.r + uTime) * uAmp.r +\n              pow(cos(PI * progress * uFreq.g + uTime * (uFreq.g / uFreq.r)), 2. ) * uAmp.g\n            );\n          }\n          float getDistortionY(float progress){\n            return (\n              -nsin(PI * progress * uFreq.b + uTime) * uAmp.b +\n              -pow(nsin(PI * progress * uFreq.a + uTime / (uFreq.b / uFreq.a)), 5.) * uAmp.a\n            );\n          }\n          vec3 getDistortion(float progress){\n            return vec3(\n              getDistortionX(progress) - getDistortionX(0.0125),\n              getDistortionY(progress) - getDistortionY(0.0125),\n              0.\n            );\n          }\n        `,\n        getJS: (progress, time) => {\n          const uFreq = turbulentUniforms.uFreq.value;\n          const uAmp = turbulentUniforms.uAmp.value;\n\n          const getX = p =>\n            Math.cos(Math.PI * p * uFreq.x + time) * uAmp.x +\n            Math.pow(Math.cos(Math.PI * p * uFreq.y + time * (uFreq.y / uFreq.x)), 2) * uAmp.y;\n\n          const getY = p =>\n            -nsin(Math.PI * p * uFreq.z + time) * uAmp.z -\n            Math.pow(nsin(Math.PI * p * uFreq.w + time / (uFreq.z / uFreq.w)), 5) * uAmp.w;\n\n          let distortion = new THREE.Vector3(\n            getX(progress) - getX(progress + 0.007),\n            getY(progress) - getY(progress + 0.007),\n            0\n          );\n          let lookAtAmp = new THREE.Vector3(-2, -5, 0);\n          let lookAtOffset = new THREE.Vector3(0, 0, -10);\n          return distortion.multiply(lookAtAmp).add(lookAtOffset);\n        }\n      },\n      turbulentDistortionStill: {\n        uniforms: turbulentUniforms,\n        getDistortion: `\n          uniform vec4 uFreq;\n          uniform vec4 uAmp;\n          float nsin(float val){\n            return sin(val) * 0.5 + 0.5;\n          }\n          #define PI 3.14159265358979\n          float getDistortionX(float progress){\n            return (\n              cos(PI * progress * uFreq.r) * uAmp.r +\n              pow(cos(PI * progress * uFreq.g * (uFreq.g / uFreq.r)), 2. ) * uAmp.g\n            );\n          }\n          float getDistortionY(float progress){\n            return (\n              -nsin(PI * progress * uFreq.b) * uAmp.b +\n              -pow(nsin(PI * progress * uFreq.a / (uFreq.b / uFreq.a)), 5.) * uAmp.a\n            );\n          }\n          vec3 getDistortion(float progress){\n            return vec3(\n              getDistortionX(progress) - getDistortionX(0.02),\n              getDistortionY(progress) - getDistortionY(0.02),\n              0.\n            );\n          }\n        `\n      },\n      deepDistortionStill: {\n        uniforms: deepUniforms,\n        getDistortion: `\n          uniform vec4 uFreq;\n          uniform vec4 uAmp;\n          uniform vec2 uPowY;\n          float nsin(float val){\n            return sin(val) * 0.5 + 0.5;\n          }\n          #define PI 3.14159265358979\n          float getDistortionX(float progress){\n            return (\n              sin(progress * PI * uFreq.x) * uAmp.x * 2.\n            );\n          }\n          float getDistortionY(float progress){\n            return (\n              pow(abs(progress * uPowY.x), uPowY.y) + sin(progress * PI * uFreq.y) * uAmp.y\n            );\n          }\n          vec3 getDistortion(float progress){\n            return vec3(\n              getDistortionX(progress) - getDistortionX(0.02),\n              getDistortionY(progress) - getDistortionY(0.05),\n              0.\n            );\n          }\n        `\n      },\n      deepDistortion: {\n        uniforms: deepUniforms,\n        getDistortion: `\n          uniform vec4 uFreq;\n          uniform vec4 uAmp;\n          uniform vec2 uPowY;\n          float nsin(float val){\n            return sin(val) * 0.5 + 0.5;\n          }\n          #define PI 3.14159265358979\n          float getDistortionX(float progress){\n            return (\n              sin(progress * PI * uFreq.x + uTime) * uAmp.x\n            );\n          }\n          float getDistortionY(float progress){\n            return (\n              pow(abs(progress * uPowY.x), uPowY.y) + sin(progress * PI * uFreq.y + uTime) * uAmp.y\n            );\n          }\n          vec3 getDistortion(float progress){\n            return vec3(\n              getDistortionX(progress) - getDistortionX(0.02),\n              getDistortionY(progress) - getDistortionY(0.02),\n              0.\n            );\n          }\n        `,\n        getJS: (progress, time) => {\n          const uFreq = deepUniforms.uFreq.value;\n          const uAmp = deepUniforms.uAmp.value;\n          const uPowY = deepUniforms.uPowY.value;\n\n          const getX = p => Math.sin(p * Math.PI * uFreq.x + time) * uAmp.x;\n          const getY = p =>\n            Math.pow(p * uPowY.x, uPowY.y) +\n            Math.sin(p * Math.PI * uFreq.y + time) * uAmp.y;\n\n          let distortion = new THREE.Vector3(\n            getX(progress) - getX(progress + 0.01),\n            getY(progress) - getY(progress + 0.01),\n            0\n          );\n          let lookAtAmp = new THREE.Vector3(-2, -4, 0);\n          let lookAtOffset = new THREE.Vector3(0, 0, -10);\n          return distortion.multiply(lookAtAmp).add(lookAtOffset);\n        }\n      }\n    }\n\n    class App {\n      constructor(container, options = {}) {\n        this.options = options;\n        if (this.options.distortion == null) {\n          this.options.distortion = {\n            uniforms: distortion_uniforms,\n            getDistortion: distortion_vertex\n          };\n        }\n        this.container = container;\n        this.renderer = new THREE.WebGLRenderer({\n          antialias: false,\n          alpha: true\n        });\n        this.renderer.setSize(container.offsetWidth, container.offsetHeight, false);\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.composer = new EffectComposer(this.renderer);\n        container.append(this.renderer.domElement);\n\n        this.camera = new THREE.PerspectiveCamera(\n          options.fov,\n          container.offsetWidth / container.offsetHeight,\n          0.1,\n          10000\n        );\n        this.camera.position.z = -5;\n        this.camera.position.y = 8;\n        this.camera.position.x = 0;\n        this.scene = new THREE.Scene();\n        this.scene.background = null;\n\n        let fog = new THREE.Fog(\n          options.colors.background,\n          options.length * 0.2,\n          options.length * 500\n        );\n        this.scene.fog = fog;\n        this.fogUniforms = {\n          fogColor: { value: fog.color },\n          fogNear: { value: fog.near },\n          fogFar: { value: fog.far }\n        };\n        this.clock = new THREE.Clock();\n        this.assets = {};\n        this.disposed = false;\n\n        this.road = new Road(this, options);\n        this.leftCarLights = new CarLights(\n          this,\n          options,\n          options.colors.leftCars,\n          options.movingAwaySpeed,\n          new THREE.Vector2(0, 1 - options.carLightsFade)\n        );\n        this.rightCarLights = new CarLights(\n          this,\n          options,\n          options.colors.rightCars,\n          options.movingCloserSpeed,\n          new THREE.Vector2(1, 0 + options.carLightsFade)\n        );\n        this.leftSticks = new LightsSticks(this, options);\n\n        this.fovTarget = options.fov;\n        this.speedUpTarget = 0;\n        this.speedUp = 0;\n        this.timeOffset = 0;\n\n        this.tick = this.tick.bind(this);\n        this.init = this.init.bind(this);\n        this.setSize = this.setSize.bind(this);\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseUp = this.onMouseUp.bind(this);\n\n        window.addEventListener(\"resize\", this.onWindowResize.bind(this));\n      }\n\n      onWindowResize() {\n        const width = this.container.offsetWidth;\n        const height = this.container.offsetHeight;\n\n        this.renderer.setSize(width, height);\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n        this.composer.setSize(width, height);\n      }\n\n      initPasses() {\n        this.renderPass = new RenderPass(this.scene, this.camera);\n        this.bloomPass = new EffectPass(\n          this.camera,\n          new BloomEffect({\n            luminanceThreshold: 0.2,\n            luminanceSmoothing: 0,\n            resolutionScale: 1\n          })\n        );\n\n        const smaaPass = new EffectPass(\n          this.camera,\n          new SMAAEffect({\n            preset: SMAAPreset.MEDIUM,\n            searchImage: SMAAEffect.searchImageDataURL,\n            areaImage: SMAAEffect.areaImageDataURL\n          })\n        );\n        this.renderPass.renderToScreen = false;\n        this.bloomPass.renderToScreen = false;\n        smaaPass.renderToScreen = true;\n        this.composer.addPass(this.renderPass);\n        this.composer.addPass(this.bloomPass);\n        this.composer.addPass(smaaPass);\n      }\n\n      loadAssets() {\n        const assets = this.assets;\n        return new Promise((resolve) => {\n          const manager = new THREE.LoadingManager(resolve);\n\n          const searchImage = new Image();\n          const areaImage = new Image();\n          assets.smaa = {};\n          searchImage.addEventListener(\"load\", function () {\n            assets.smaa.search = this;\n            manager.itemEnd(\"smaa-search\");\n          });\n\n          areaImage.addEventListener(\"load\", function () {\n            assets.smaa.area = this;\n            manager.itemEnd(\"smaa-area\");\n          });\n          manager.itemStart(\"smaa-search\");\n          manager.itemStart(\"smaa-area\");\n\n          searchImage.src = SMAAEffect.searchImageDataURL;\n          areaImage.src = SMAAEffect.areaImageDataURL;\n        });\n      }\n\n      init() {\n        this.initPasses();\n        const options = this.options;\n        this.road.init();\n        this.leftCarLights.init();\n\n        this.leftCarLights.mesh.position.setX(\n          -options.roadWidth / 2 - options.islandWidth / 2\n        );\n        this.rightCarLights.init();\n        this.rightCarLights.mesh.position.setX(\n          options.roadWidth / 2 + options.islandWidth / 2\n        );\n        this.leftSticks.init();\n        this.leftSticks.mesh.position.setX(\n          -(options.roadWidth + options.islandWidth / 2)\n        );\n\n        this.container.addEventListener(\"mousedown\", this.onMouseDown);\n        this.container.addEventListener(\"mouseup\", this.onMouseUp);\n        this.container.addEventListener(\"mouseout\", this.onMouseUp);\n\n        this.tick();\n      }\n\n      onMouseDown(ev) {\n        if (this.options.onSpeedUp) this.options.onSpeedUp(ev);\n        this.fovTarget = this.options.fovSpeedUp;\n        this.speedUpTarget = this.options.speedUp;\n      }\n\n      onMouseUp(ev) {\n        if (this.options.onSlowDown) this.options.onSlowDown(ev);\n        this.fovTarget = this.options.fov;\n        this.speedUpTarget = 0;\n      }\n\n      update(delta) {\n        let lerpPercentage = Math.exp(-(-60 * Math.log2(1 - 0.1)) * delta);\n        this.speedUp += lerp(\n          this.speedUp,\n          this.speedUpTarget,\n          lerpPercentage,\n          0.00001\n        );\n        this.timeOffset += this.speedUp * delta;\n\n        let time = this.clock.elapsedTime + this.timeOffset;\n\n        this.rightCarLights.update(time);\n        this.leftCarLights.update(time);\n        this.leftSticks.update(time);\n        this.road.update(time);\n\n        let updateCamera = false;\n        let fovChange = lerp(this.camera.fov, this.fovTarget, lerpPercentage);\n        if (fovChange !== 0) {\n          this.camera.fov += fovChange * delta * 6;\n          updateCamera = true;\n        }\n\n        if (this.options.distortion.getJS) {\n          const distortion = this.options.distortion.getJS(0.025, time);\n\n          this.camera.lookAt(\n            new THREE.Vector3(\n              this.camera.position.x + distortion.x,\n              this.camera.position.y + distortion.y,\n              this.camera.position.z + distortion.z\n            )\n          );\n          updateCamera = true;\n        }\n        if (updateCamera) {\n          this.camera.updateProjectionMatrix();\n        }\n\n        if (this.options.isHyper) {\n          console.log(this.options.isHyper);\n        }\n      }\n\n      render(delta) {\n        this.composer.render(delta);\n      }\n\n      dispose() {\n        this.disposed = true;\n        \n        if (this.renderer) {\n          this.renderer.dispose();\n        }\n        if (this.composer) {\n          this.composer.dispose();\n        }\n        if (this.scene) {\n          this.scene.clear();\n        }\n        \n        window.removeEventListener(\"resize\", this.onWindowResize.bind(this));\n        if (this.container) {\n          this.container.removeEventListener(\"mousedown\", this.onMouseDown);\n          this.container.removeEventListener(\"mouseup\", this.onMouseUp);\n          this.container.removeEventListener(\"mouseout\", this.onMouseUp);\n        }\n      }\n\n      setSize(width, height, updateStyles) {\n        this.composer.setSize(width, height, updateStyles);\n      }\n\n      tick() {\n        if (this.disposed || !this) return;\n        if (resizeRendererToDisplaySize(this.renderer, this.setSize)) {\n          const canvas = this.renderer.domElement;\n          this.camera.aspect = canvas.clientWidth / canvas.clientHeight;\n          this.camera.updateProjectionMatrix();\n        }\n        const delta = this.clock.getDelta();\n        this.render(delta);\n        this.update(delta);\n        requestAnimationFrame(this.tick);\n      }\n    }\n\n    const distortion_uniforms = {\n      uDistortionX: { value: new THREE.Vector2(80, 3) },\n      uDistortionY: { value: new THREE.Vector2(-40, 2.5) }\n    };\n\n    const distortion_vertex = `\n      #define PI 3.14159265358979\n      uniform vec2 uDistortionX;\n      uniform vec2 uDistortionY;\n      float nsin(float val){\n        return sin(val) * 0.5 + 0.5;\n      }\n      vec3 getDistortion(float progress){\n        progress = clamp(progress, 0., 1.);\n        float xAmp = uDistortionX.r;\n        float xFreq = uDistortionX.g;\n        float yAmp = uDistortionY.r;\n        float yFreq = uDistortionY.g;\n        return vec3( \n          xAmp * nsin(progress * PI * xFreq - PI / 2.),\n          yAmp * nsin(progress * PI * yFreq - PI / 2.),\n          0.\n        );\n      }\n    `;\n\n    const random = base => {\n      if (Array.isArray(base)) return Math.random() * (base[1] - base[0]) + base[0];\n      return Math.random() * base;\n    };\n\n    const pickRandom = arr => {\n      if (Array.isArray(arr)) return arr[Math.floor(Math.random() * arr.length)];\n      return arr;\n    };\n\n    function lerp(current, target, speed = 0.1, limit = 0.001) {\n      let change = (target - current) * speed;\n      if (Math.abs(change) < limit) {\n        change = target - current;\n      }\n      return change;\n    }\n\n    class CarLights {\n      constructor(webgl, options, colors, speed, fade) {\n        this.webgl = webgl;\n        this.options = options;\n        this.colors = colors;\n        this.speed = speed;\n        this.fade = fade;\n      }\n\n      init() {\n        const options = this.options;\n        let curve = new THREE.LineCurve3(\n          new THREE.Vector3(0, 0, 0),\n          new THREE.Vector3(0, 0, -1)\n        );\n        let geometry = new THREE.TubeGeometry(curve, 40, 1, 8, false);\n\n        let instanced = new THREE.InstancedBufferGeometry().copy(geometry);\n        instanced.instanceCount = options.lightPairsPerRoadWay * 2;\n\n        let laneWidth = options.roadWidth / options.lanesPerRoad;\n\n        let aOffset = [];\n        let aMetrics = [];\n        let aColor = [];\n\n        let colors = this.colors;\n        if (Array.isArray(colors)) {\n          colors = colors.map(c => new THREE.Color(c));\n        } else {\n          colors = new THREE.Color(colors);\n        }\n\n        for (let i = 0; i < options.lightPairsPerRoadWay; i++) {\n          let radius = random(options.carLightsRadius);\n          let length = random(options.carLightsLength);\n          let speed = random(this.speed);\n\n          let carLane = i % options.lanesPerRoad;\n          let laneX = carLane * laneWidth - options.roadWidth / 2 + laneWidth / 2;\n\n          let carWidth = random(options.carWidthPercentage) * laneWidth;\n          let carShiftX = random(options.carShiftX) * laneWidth;\n          laneX += carShiftX;\n\n          let offsetY = random(options.carFloorSeparation) + radius * 1.3;\n\n          let offsetZ = -random(options.length);\n\n          aOffset.push(laneX - carWidth / 2);\n          aOffset.push(offsetY);\n          aOffset.push(offsetZ);\n\n          aOffset.push(laneX + carWidth / 2);\n          aOffset.push(offsetY);\n          aOffset.push(offsetZ);\n\n          aMetrics.push(radius);\n          aMetrics.push(length);\n          aMetrics.push(speed);\n\n          aMetrics.push(radius);\n          aMetrics.push(length);\n          aMetrics.push(speed);\n\n          let color = pickRandom(colors);\n          aColor.push(color.r);\n          aColor.push(color.g);\n          aColor.push(color.b);\n\n          aColor.push(color.r);\n          aColor.push(color.g);\n          aColor.push(color.b);\n        }\n\n        instanced.setAttribute(\n          \"aOffset\",\n          new THREE.InstancedBufferAttribute(new Float32Array(aOffset), 3, false)\n        );\n        instanced.setAttribute(\n          \"aMetrics\",\n          new THREE.InstancedBufferAttribute(new Float32Array(aMetrics), 3, false)\n        );\n        instanced.setAttribute(\n          \"aColor\",\n          new THREE.InstancedBufferAttribute(new Float32Array(aColor), 3, false)\n        );\n\n        let material = new THREE.ShaderMaterial({\n          fragmentShader: carLightsFragment,\n          vertexShader: carLightsVertex,\n          transparent: true,\n          uniforms: Object.assign(\n            {\n              uTime: { value: 0 },\n              uTravelLength: { value: options.length },\n              uFade: { value: this.fade }\n            },\n            this.webgl.fogUniforms,\n            options.distortion.uniforms\n          )\n        });\n\n        material.onBeforeCompile = shader => {\n          shader.vertexShader = shader.vertexShader.replace(\n            \"#include <getDistortion_vertex>\",\n            options.distortion.getDistortion\n          );\n        };\n\n        let mesh = new THREE.Mesh(instanced, material);\n        mesh.frustumCulled = false;\n        this.webgl.scene.add(mesh);\n        this.mesh = mesh;\n      }\n\n      update(time) {\n        this.mesh.material.uniforms.uTime.value = time;\n      }\n    }\n\n    const carLightsFragment = `\n      #define USE_FOG;\n      ${THREE.ShaderChunk[\"fog_pars_fragment\"]}\n      varying vec3 vColor;\n      varying vec2 vUv; \n      uniform vec2 uFade;\n      void main() {\n        vec3 color = vec3(vColor);\n        float alpha = smoothstep(uFade.x, uFade.y, vUv.x);\n        gl_FragColor = vec4(color, alpha);\n        if (gl_FragColor.a < 0.0001) discard;\n        ${THREE.ShaderChunk[\"fog_fragment\"]}\n      }\n    `;\n\n    const carLightsVertex = `\n      #define USE_FOG;\n      ${THREE.ShaderChunk[\"fog_pars_vertex\"]}\n      attribute vec3 aOffset;\n      attribute vec3 aMetrics;\n      attribute vec3 aColor;\n      uniform float uTravelLength;\n      uniform float uTime;\n      varying vec2 vUv; \n      varying vec3 vColor; \n      #include <getDistortion_vertex>\n      void main() {\n        vec3 transformed = position.xyz;\n        float radius = aMetrics.r;\n        float myLength = aMetrics.g;\n        float speed = aMetrics.b;\n\n        transformed.xy *= radius;\n        transformed.z *= myLength;\n\n        transformed.z += myLength - mod(uTime * speed + aOffset.z, uTravelLength);\n        transformed.xy += aOffset.xy;\n\n        float progress = abs(transformed.z / uTravelLength);\n        transformed.xyz += getDistortion(progress);\n\n        vec4 mvPosition = modelViewMatrix * vec4(transformed, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n        vColor = aColor;\n        ${THREE.ShaderChunk[\"fog_vertex\"]}\n      }\n    `;\n\n    class LightsSticks {\n      constructor(webgl, options) {\n        this.webgl = webgl;\n        this.options = options;\n      }\n\n      init() {\n        const options = this.options;\n        const geometry = new THREE.PlaneGeometry(1, 1);\n        let instanced = new THREE.InstancedBufferGeometry().copy(geometry);\n        let totalSticks = options.totalSideLightSticks;\n        instanced.instanceCount = totalSticks;\n\n        let stickoffset = options.length / (totalSticks - 1);\n        const aOffset = [];\n        const aColor = [];\n        const aMetrics = [];\n\n        let colors = options.colors.sticks;\n        if (Array.isArray(colors)) {\n          colors = colors.map(c => new THREE.Color(c));\n        } else {\n          colors = new THREE.Color(colors);\n        }\n\n        for (let i = 0; i < totalSticks; i++) {\n          let width = random(options.lightStickWidth);\n          let height = random(options.lightStickHeight);\n          aOffset.push((i - 1) * stickoffset * 2 + stickoffset * Math.random());\n\n          let color = pickRandom(colors);\n          aColor.push(color.r);\n          aColor.push(color.g);\n          aColor.push(color.b);\n\n          aMetrics.push(width);\n          aMetrics.push(height);\n        }\n\n        instanced.setAttribute(\n          \"aOffset\",\n          new THREE.InstancedBufferAttribute(new Float32Array(aOffset), 1, false)\n        );\n        instanced.setAttribute(\n          \"aColor\",\n          new THREE.InstancedBufferAttribute(new Float32Array(aColor), 3, false)\n        );\n        instanced.setAttribute(\n          \"aMetrics\",\n          new THREE.InstancedBufferAttribute(new Float32Array(aMetrics), 2, false)\n        );\n\n        const material = new THREE.ShaderMaterial({\n          fragmentShader: sideSticksFragment,\n          vertexShader: sideSticksVertex,\n          side: THREE.DoubleSide,\n          uniforms: Object.assign(\n            {\n              uTravelLength: { value: options.length },\n              uTime: { value: 0 }\n            },\n            this.webgl.fogUniforms,\n            options.distortion.uniforms\n          )\n        });\n\n        material.onBeforeCompile = shader => {\n          shader.vertexShader = shader.vertexShader.replace(\n            \"#include <getDistortion_vertex>\",\n            options.distortion.getDistortion\n          );\n        };\n\n        const mesh = new THREE.Mesh(instanced, material);\n        mesh.frustumCulled = false;\n        this.webgl.scene.add(mesh);\n        this.mesh = mesh;\n      }\n\n      update(time) {\n        this.mesh.material.uniforms.uTime.value = time;\n      }\n    }\n\n    const sideSticksVertex = `\n      #define USE_FOG;\n      ${THREE.ShaderChunk[\"fog_pars_vertex\"]}\n      attribute float aOffset;\n      attribute vec3 aColor;\n      attribute vec2 aMetrics;\n      uniform float uTravelLength;\n      uniform float uTime;\n      varying vec3 vColor;\n      mat4 rotationY( in float angle ) {\n        return mat4(\tcos(angle),\t\t0,\t\tsin(angle),\t0,\n                     0,\t\t1.0,\t\t\t 0,\t0,\n                -sin(angle),\t0,\t\tcos(angle),\t0,\n                0, \t\t0,\t\t\t\t0,\t1);\n      }\n      #include <getDistortion_vertex>\n      void main(){\n        vec3 transformed = position.xyz;\n        float width = aMetrics.x;\n        float height = aMetrics.y;\n\n        transformed.xy *= vec2(width, height);\n        float time = mod(uTime * 60. * 2. + aOffset, uTravelLength);\n\n        transformed = (rotationY(3.14/2.) * vec4(transformed,1.)).xyz;\n\n        transformed.z += - uTravelLength + time;\n\n        float progress = abs(transformed.z / uTravelLength);\n        transformed.xyz += getDistortion(progress);\n\n        transformed.y += height / 2.;\n        transformed.x += -width / 2.;\n        vec4 mvPosition = modelViewMatrix * vec4(transformed, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vColor = aColor;\n        ${THREE.ShaderChunk[\"fog_vertex\"]}\n      }\n    `;\n\n    const sideSticksFragment = `\n      #define USE_FOG;\n      ${THREE.ShaderChunk[\"fog_pars_fragment\"]}\n      varying vec3 vColor;\n      void main(){\n        vec3 color = vec3(vColor);\n        gl_FragColor = vec4(color,1.);\n        ${THREE.ShaderChunk[\"fog_fragment\"]}\n      }\n    `;\n\n    class Road {\n      constructor(webgl, options) {\n        this.webgl = webgl;\n        this.options = options;\n        this.uTime = { value: 0 };\n      }\n\n      createPlane(side, width, isRoad) {\n        const options = this.options;\n        let segments = 100;\n        const geometry = new THREE.PlaneGeometry(\n          isRoad ? options.roadWidth : options.islandWidth,\n          options.length,\n          20,\n          segments\n        );\n        let uniforms = {\n          uTravelLength: { value: options.length },\n          uColor: { value: new THREE.Color(isRoad ? options.colors.roadColor : options.colors.islandColor) },\n          uTime: this.uTime\n        };\n\n        if (isRoad) {\n          uniforms = Object.assign(uniforms, {\n            uLanes: { value: options.lanesPerRoad },\n            uBrokenLinesColor: { value: new THREE.Color(options.colors.brokenLines) },\n            uShoulderLinesColor: { value: new THREE.Color(options.colors.shoulderLines) },\n            uShoulderLinesWidthPercentage: { value: options.shoulderLinesWidthPercentage },\n            uBrokenLinesLengthPercentage: { value: options.brokenLinesLengthPercentage },\n            uBrokenLinesWidthPercentage: { value: options.brokenLinesWidthPercentage }\n          });\n        }\n\n        const material = new THREE.ShaderMaterial({\n          fragmentShader: isRoad ? roadFragment : islandFragment,\n          vertexShader: roadVertex,\n          side: THREE.DoubleSide,\n          uniforms: Object.assign(\n            uniforms,\n            this.webgl.fogUniforms,\n            options.distortion.uniforms\n          )\n        });\n\n        material.onBeforeCompile = shader => {\n          shader.vertexShader = shader.vertexShader.replace(\n            \"#include <getDistortion_vertex>\",\n            options.distortion.getDistortion\n          );\n        };\n\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.rotation.x = -Math.PI / 2;\n        mesh.position.z = -options.length / 2;\n        mesh.position.x +=\n          (this.options.islandWidth / 2 + options.roadWidth / 2) * side;\n        this.webgl.scene.add(mesh);\n\n        return mesh;\n      }\n\n      init() {\n        this.leftRoadWay = this.createPlane(-1, this.options.roadWidth, true);\n        this.rightRoadWay = this.createPlane(1, this.options.roadWidth, true);\n        this.island = this.createPlane(0, this.options.islandWidth, false);\n      }\n\n      update(time) {\n        this.uTime.value = time;\n      }\n    }\n\n    const roadBaseFragment = `\n      #define USE_FOG;\n      varying vec2 vUv; \n      uniform vec3 uColor;\n      uniform float uTime;\n      #include <roadMarkings_vars>\n      ${THREE.ShaderChunk[\"fog_pars_fragment\"]}\n      void main() {\n        vec2 uv = vUv;\n        vec3 color = vec3(uColor);\n        #include <roadMarkings_fragment>\n        gl_FragColor = vec4(color, 1.);\n        ${THREE.ShaderChunk[\"fog_fragment\"]}\n      }\n    `;\n\n    const islandFragment = roadBaseFragment\n      .replace(\"#include <roadMarkings_fragment>\", \"\")\n      .replace(\"#include <roadMarkings_vars>\", \"\");\n\n    const roadMarkings_vars = `\n      uniform float uLanes;\n      uniform vec3 uBrokenLinesColor;\n      uniform vec3 uShoulderLinesColor;\n      uniform float uShoulderLinesWidthPercentage;\n      uniform float uBrokenLinesWidthPercentage;\n      uniform float uBrokenLinesLengthPercentage;\n      highp float random(vec2 co) {\n        highp float a = 12.9898;\n        highp float b = 78.233;\n        highp float c = 43758.5453;\n        highp float dt = dot(co.xy, vec2(a, b));\n        highp float sn = mod(dt, 3.14);\n        return fract(sin(sn) * c);\n      }\n    `;\n\n    const roadMarkings_fragment = `\n      uv.y = mod(uv.y + uTime * 0.05, 1.);\n      float laneWidth = 1.0 / uLanes;\n      float brokenLineWidth = laneWidth * uBrokenLinesWidthPercentage;\n      float laneEmptySpace = 1. - uBrokenLinesLengthPercentage;\n\n      float brokenLines = step(1.0 - brokenLineWidth, fract(uv.x * 2.0)) * step(laneEmptySpace, fract(uv.y * 10.0));\n      float sideLines = step(1.0 - brokenLineWidth, fract((uv.x - laneWidth * (uLanes - 1.0)) * 2.0)) + step(brokenLineWidth, uv.x);\n\n      brokenLines = mix(brokenLines, sideLines, uv.x);\n    `;\n\n    const roadFragment = roadBaseFragment\n      .replace(\"#include <roadMarkings_fragment>\", roadMarkings_fragment)\n      .replace(\"#include <roadMarkings_vars>\", roadMarkings_vars);\n\n    const roadVertex = `\n      #define USE_FOG;\n      uniform float uTime;\n      ${THREE.ShaderChunk[\"fog_pars_vertex\"]}\n      uniform float uTravelLength;\n      varying vec2 vUv; \n      #include <getDistortion_vertex>\n      void main() {\n        vec3 transformed = position.xyz;\n        vec3 distortion = getDistortion((transformed.y + uTravelLength / 2.) / uTravelLength);\n        transformed.x += distortion.x;\n        transformed.z += distortion.y;\n        transformed.y += -1. * distortion.z;  \n        \n        vec4 mvPosition = modelViewMatrix * vec4(transformed, 1.);\n        gl_Position = projectionMatrix * mvPosition;\n        vUv = uv;\n        ${THREE.ShaderChunk[\"fog_vertex\"]}\n      }\n    `;\n\n    function resizeRendererToDisplaySize(renderer, setSize) {\n      const canvas = renderer.domElement;\n      const width = canvas.clientWidth;\n      const height = canvas.clientHeight;\n      const needResize = canvas.width !== width || canvas.height !== height;\n      if (needResize) {\n        setSize(width, height, false);\n      }\n      return needResize;\n    }\n\n    (function () {\n      const container = document.getElementById('lights');\n      const options = { ...effectOptions };\n      options.distortion = distortions[options.distortion];\n\n      const myApp = new App(container, options);\n      appRef.current = myApp;\n      myApp.loadAssets().then(myApp.init);\n    })();\n\n    return () => {\n      if (appRef.current) {\n        appRef.current.dispose();\n      }\n    };\n  }, [effectOptions]);\n\n  return (\n    <div id=\"lights\" className=\"w-full h-full\" ref={hyperspeed}></div>\n  );\n}\n\nexport default Hyperspeed;\n"],"mappings":"gHAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAC9B,OAASC,WAAW,CAAEC,cAAc,CAAEC,UAAU,CAAEC,UAAU,CAAEC,UAAU,CAAEC,UAAU,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7G,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAoCX,IApCY,CAAEC,aAAa,CAAG,CACpCC,SAAS,CAAEA,CAAA,GAAM,CAAE,CAAC,CACpBC,UAAU,CAAEA,CAAA,GAAM,CAAE,CAAC,CACrBC,UAAU,CAAE,qBAAqB,CACjCC,MAAM,CAAE,GAAG,CACXC,SAAS,CAAE,EAAE,CACbC,WAAW,CAAE,CAAC,CACdC,YAAY,CAAE,CAAC,CACfC,GAAG,CAAE,EAAE,CACPC,UAAU,CAAE,GAAG,CACfC,OAAO,CAAE,CAAC,CACVC,aAAa,CAAE,GAAG,CAClBC,oBAAoB,CAAE,EAAE,CACxBC,oBAAoB,CAAE,EAAE,CACxBC,4BAA4B,CAAE,IAAI,CAClCC,0BAA0B,CAAE,GAAG,CAC/BC,2BAA2B,CAAE,GAAG,CAChCC,eAAe,CAAE,CAAC,IAAI,CAAE,GAAG,CAAC,CAC5BC,gBAAgB,CAAE,CAAC,GAAG,CAAE,GAAG,CAAC,CAC5BC,eAAe,CAAE,CAAC,EAAE,CAAE,EAAE,CAAC,CACzBC,iBAAiB,CAAE,CAAC,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAC/BC,eAAe,CAAE,CAAC,GAAG,CAAG,IAAI,CAAE,GAAG,CAAG,GAAG,CAAC,CACxCC,eAAe,CAAE,CAAC,IAAI,CAAE,IAAI,CAAC,CAC7BC,kBAAkB,CAAE,CAAC,GAAG,CAAE,GAAG,CAAC,CAC9BC,SAAS,CAAE,CAAC,CAAC,GAAG,CAAE,GAAG,CAAC,CACtBC,kBAAkB,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAC1BC,MAAM,CAAE,CACNC,SAAS,CAAE,QAAQ,CACnBC,WAAW,CAAE,QAAQ,CACrBC,UAAU,CAAE,QAAQ,CACpBC,aAAa,CAAE,QAAQ,CACvBC,WAAW,CAAE,QAAQ,CACrBC,QAAQ,CAAE,CAAC,QAAQ,CAAE,QAAQ,CAAE,QAAQ,CAAC,CACxCC,SAAS,CAAE,CAAC,QAAQ,CAAE,QAAQ,CAAE,QAAQ,CAAC,CACzCC,MAAM,CAAE,QACV,CACF,CAAE,CAAC,CAAAnC,IAAA,CACD,KAAM,CAAAoC,UAAU,CAAG/C,MAAM,CAAC,IAAI,CAAC,CAC/B,KAAM,CAAAgD,MAAM,CAAGhD,MAAM,CAAC,IAAI,CAAC,CAE3BD,SAAS,CAAC,IAAM,CACd,GAAIiD,MAAM,CAACC,OAAO,CAAE,CAClBD,MAAM,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC,CACxB,KAAM,CAAAC,SAAS,CAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CACnD,GAAIF,SAAS,CAAE,CACb,MAAOA,SAAS,CAACG,UAAU,CAAE,CAC3BH,SAAS,CAACI,WAAW,CAACJ,SAAS,CAACG,UAAU,CAAC,CAC7C,CACF,CACF,CAEA,KAAM,CAAAE,gBAAgB,CAAG,CACvBC,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,EAAE,CAAE,CAAC,CAC7CC,IAAI,CAAE,CAAEF,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC0D,OAAO,CAAC,EAAE,CAAE,EAAE,CAAE,EAAE,CAAE,CAC/C,CAAC,CAED,KAAM,CAAAE,UAAU,CAAG,CACjBJ,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC6D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACzCF,IAAI,CAAE,CAAEF,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC6D,OAAO,CAAC,EAAE,CAAE,EAAE,CAAE,CAC3C,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAG,CACvBN,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC6D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACzCF,IAAI,CAAE,CAAEF,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC6D,OAAO,CAAC,EAAE,CAAE,EAAE,CAAE,CAC3C,CAAC,CAED,KAAM,CAAAE,iBAAiB,CAAG,CACxBP,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAACgE,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAC/CL,IAAI,CAAE,CAAEF,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAACgE,OAAO,CAAC,EAAE,CAAE,CAAC,CAAE,EAAE,CAAE,EAAE,CAAE,CAClD,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,CACnBT,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC6D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CACzCF,IAAI,CAAE,CAAEF,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC6D,OAAO,CAAC,EAAE,CAAE,EAAE,CAAE,CAAC,CAC1CK,KAAK,CAAE,CAAET,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC6D,OAAO,CAAC,EAAE,CAAE,CAAC,CAAE,CAC3C,CAAC,CAED,GAAI,CAAAM,IAAI,CAAGC,GAAG,EAAIC,IAAI,CAACC,GAAG,CAACF,GAAG,CAAC,CAAG,GAAG,CAAG,GAAG,CAE3C,KAAM,CAAAG,WAAW,CAAG,CAClBC,kBAAkB,CAAE,CAClBC,QAAQ,CAAElB,gBAAgB,CAC1BmB,aAAa,8sBAeZ,CACDC,KAAK,CAAEA,CAACC,QAAQ,CAAEC,IAAI,GAAK,CACzB,GAAI,CAAAC,mBAAmB,CAAG,IAAI,CAC9B,GAAI,CAAAtB,KAAK,CAAGD,gBAAgB,CAACC,KAAK,CAACC,KAAK,CACxC,GAAI,CAAAE,IAAI,CAAGJ,gBAAgB,CAACI,IAAI,CAACF,KAAK,CACtC,GAAI,CAAA3C,UAAU,CAAG,GAAI,CAAAd,KAAK,CAAC0D,OAAO,CAChCW,IAAI,CAACU,GAAG,CAACH,QAAQ,CAAGP,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAACyB,CAAC,CAAGJ,IAAI,CAAC,CAAGlB,IAAI,CAACsB,CAAC,CACtDZ,IAAI,CAACU,GAAG,CAACD,mBAAmB,CAAGT,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAACyB,CAAC,CAAGJ,IAAI,CAAC,CAAGlB,IAAI,CAACsB,CAAC,CACjEd,IAAI,CAACS,QAAQ,CAAGP,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAAC0B,CAAC,CAAGL,IAAI,CAAC,CAAGlB,IAAI,CAACuB,CAAC,CAClDf,IAAI,CAACW,mBAAmB,CAAGT,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAAC0B,CAAC,CAAGL,IAAI,CAAC,CAAGlB,IAAI,CAACuB,CAAC,CAC7Df,IAAI,CAACS,QAAQ,CAAGP,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAAC2B,CAAC,CAAGN,IAAI,CAAC,CAAGlB,IAAI,CAACwB,CAAC,CAClDhB,IAAI,CAACW,mBAAmB,CAAGT,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAAC2B,CAAC,CAAGN,IAAI,CAAC,CAAGlB,IAAI,CAACwB,CAC9D,CAAC,CACD,GAAI,CAAAC,SAAS,CAAG,GAAI,CAAApF,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC1C,GAAI,CAAA2B,YAAY,CAAG,GAAI,CAAArF,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAC9C,MAAO,CAAA5C,UAAU,CAACwE,QAAQ,CAACF,SAAS,CAAC,CAACG,GAAG,CAACF,YAAY,CAAC,CACzD,CACF,CAAC,CACDG,YAAY,CAAE,CACZf,QAAQ,CAAEb,UAAU,CACpBc,aAAa,2hBAYZ,CACDC,KAAK,CAAEA,CAACC,QAAQ,CAAEC,IAAI,GAAK,CACzB,GAAI,CAAAC,mBAAmB,CAAG,IAAI,CAC9B,GAAI,CAAAtB,KAAK,CAAGI,UAAU,CAACJ,KAAK,CAACC,KAAK,CAClC,GAAI,CAAAE,IAAI,CAAGC,UAAU,CAACD,IAAI,CAACF,KAAK,CAChC,GAAI,CAAA3C,UAAU,CAAG,GAAI,CAAAd,KAAK,CAAC0D,OAAO,CAChCW,IAAI,CAACU,GAAG,CAACH,QAAQ,CAAGP,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAACyB,CAAC,CAAGJ,IAAI,CAAC,CAAGlB,IAAI,CAACsB,CAAC,CACtDZ,IAAI,CAACU,GAAG,CAACD,mBAAmB,CAAGT,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAACyB,CAAC,CAAGJ,IAAI,CAAC,CAAGlB,IAAI,CAACsB,CAAC,CACjEZ,IAAI,CAACC,GAAG,CAACM,QAAQ,CAAGP,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAAC0B,CAAC,CAAGL,IAAI,CAAGR,IAAI,CAACW,EAAE,CAAG,CAAC,CAAC,CAAGrB,IAAI,CAACuB,CAAC,CACpEb,IAAI,CAACC,GAAG,CAACQ,mBAAmB,CAAGT,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAAC0B,CAAC,CAAGL,IAAI,CAAGR,IAAI,CAACW,EAAE,CAAG,CAAC,CAAC,CAAGrB,IAAI,CAACuB,CAAC,CAC/E,CACF,CAAC,CACD,GAAI,CAAAE,SAAS,CAAG,GAAI,CAAApF,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,GAAG,CAAE,CAAC,CAAC,CAC5C,GAAI,CAAA2B,YAAY,CAAG,GAAI,CAAArF,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAC9C,MAAO,CAAA5C,UAAU,CAACwE,QAAQ,CAACF,SAAS,CAAC,CAACG,GAAG,CAACF,YAAY,CAAC,CACzD,CACF,CAAC,CACDI,kBAAkB,CAAE,CAClBhB,QAAQ,CAAEX,gBAAgB,CAC1BY,aAAa,qfAYZ,CACDC,KAAK,CAAEA,CAACC,QAAQ,CAAEC,IAAI,GAAK,CACzB,GAAI,CAAAa,WAAW,CAAG,MAAM,CACxB,GAAI,CAAAlC,KAAK,CAAGM,gBAAgB,CAACN,KAAK,CAACC,KAAK,CACxC,GAAI,CAAAE,IAAI,CAAGG,gBAAgB,CAACH,IAAI,CAACF,KAAK,CACtC,GAAI,CAAA3C,UAAU,CAAG,GAAI,CAAAd,KAAK,CAAC0D,OAAO,CAChCW,IAAI,CAACC,GAAG,CAACM,QAAQ,CAAGP,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAACyB,CAAC,CAAGJ,IAAI,CAAC,CAAGlB,IAAI,CAACsB,CAAC,CACtDZ,IAAI,CAACC,GAAG,CAACoB,WAAW,CAAGrB,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAACyB,CAAC,CAAGJ,IAAI,CAAC,CAAGlB,IAAI,CAACsB,CAAC,CACzDZ,IAAI,CAACC,GAAG,CAACM,QAAQ,CAAGP,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAAC0B,CAAC,CAAGL,IAAI,CAAC,CAAGlB,IAAI,CAACuB,CAAC,CACtDb,IAAI,CAACC,GAAG,CAACoB,WAAW,CAAGrB,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAAC0B,CAAC,CAAGL,IAAI,CAAC,CAAGlB,IAAI,CAACuB,CAAC,CACzD,CACF,CAAC,CACD,GAAI,CAAAE,SAAS,CAAG,GAAI,CAAApF,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC1C,GAAI,CAAA2B,YAAY,CAAG,GAAI,CAAArF,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAC9C,MAAO,CAAA5C,UAAU,CAACwE,QAAQ,CAACF,SAAS,CAAC,CAACG,GAAG,CAACF,YAAY,CAAC,CACzD,CACF,CAAC,CACDM,mBAAmB,CAAE,CACnBlB,QAAQ,CAAEV,iBAAiB,CAC3BW,aAAa,y8BA0BZ,CACDC,KAAK,CAAEA,CAACC,QAAQ,CAAEC,IAAI,GAAK,CACzB,KAAM,CAAArB,KAAK,CAAGO,iBAAiB,CAACP,KAAK,CAACC,KAAK,CAC3C,KAAM,CAAAE,IAAI,CAAGI,iBAAiB,CAACJ,IAAI,CAACF,KAAK,CAEzC,KAAM,CAAAmC,IAAI,CAAGC,CAAC,EACZxB,IAAI,CAACU,GAAG,CAACV,IAAI,CAACW,EAAE,CAAGa,CAAC,CAAGrC,KAAK,CAACyB,CAAC,CAAGJ,IAAI,CAAC,CAAGlB,IAAI,CAACsB,CAAC,CAC/CZ,IAAI,CAACyB,GAAG,CAACzB,IAAI,CAACU,GAAG,CAACV,IAAI,CAACW,EAAE,CAAGa,CAAC,CAAGrC,KAAK,CAAC0B,CAAC,CAAGL,IAAI,EAAIrB,KAAK,CAAC0B,CAAC,CAAG1B,KAAK,CAACyB,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAGtB,IAAI,CAACuB,CAAC,CAEpF,KAAM,CAAAa,IAAI,CAAGF,CAAC,EACZ,CAAC1B,IAAI,CAACE,IAAI,CAACW,EAAE,CAAGa,CAAC,CAAGrC,KAAK,CAAC2B,CAAC,CAAGN,IAAI,CAAC,CAAGlB,IAAI,CAACwB,CAAC,CAC5Cd,IAAI,CAACyB,GAAG,CAAC3B,IAAI,CAACE,IAAI,CAACW,EAAE,CAAGa,CAAC,CAAGrC,KAAK,CAACwC,CAAC,CAAGnB,IAAI,EAAIrB,KAAK,CAAC2B,CAAC,CAAG3B,KAAK,CAACwC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAGrC,IAAI,CAACqC,CAAC,CAEhF,GAAI,CAAAlF,UAAU,CAAG,GAAI,CAAAd,KAAK,CAAC0D,OAAO,CAChCkC,IAAI,CAAChB,QAAQ,CAAC,CAAGgB,IAAI,CAAChB,QAAQ,CAAG,KAAK,CAAC,CACvCmB,IAAI,CAACnB,QAAQ,CAAC,CAAGmB,IAAI,CAACnB,QAAQ,CAAG,KAAK,CAAC,CACvC,CACF,CAAC,CACD,GAAI,CAAAQ,SAAS,CAAG,GAAI,CAAApF,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAC5C,GAAI,CAAA2B,YAAY,CAAG,GAAI,CAAArF,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,EAAE,CAAC,CAC/C,MAAO,CAAA5C,UAAU,CAACwE,QAAQ,CAACF,SAAS,CAAC,CAACG,GAAG,CAACF,YAAY,CAAC,CACzD,CACF,CAAC,CACDY,wBAAwB,CAAE,CACxBxB,QAAQ,CAAEV,iBAAiB,CAC3BW,aAAa,q6BA2Bf,CAAC,CACDwB,mBAAmB,CAAE,CACnBzB,QAAQ,CAAER,YAAY,CACtBS,aAAa,g0BA0Bf,CAAC,CACDyB,cAAc,CAAE,CACd1B,QAAQ,CAAER,YAAY,CACtBS,aAAa,20BAyBZ,CACDC,KAAK,CAAEA,CAACC,QAAQ,CAAEC,IAAI,GAAK,CACzB,KAAM,CAAArB,KAAK,CAAGS,YAAY,CAACT,KAAK,CAACC,KAAK,CACtC,KAAM,CAAAE,IAAI,CAAGM,YAAY,CAACN,IAAI,CAACF,KAAK,CACpC,KAAM,CAAAS,KAAK,CAAGD,YAAY,CAACC,KAAK,CAACT,KAAK,CAEtC,KAAM,CAAAmC,IAAI,CAAGC,CAAC,EAAIxB,IAAI,CAACC,GAAG,CAACuB,CAAC,CAAGxB,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAACyB,CAAC,CAAGJ,IAAI,CAAC,CAAGlB,IAAI,CAACsB,CAAC,CACjE,KAAM,CAAAc,IAAI,CAAGF,CAAC,EACZxB,IAAI,CAACyB,GAAG,CAACD,CAAC,CAAG3B,KAAK,CAACe,CAAC,CAAEf,KAAK,CAACgB,CAAC,CAAC,CAC9Bb,IAAI,CAACC,GAAG,CAACuB,CAAC,CAAGxB,IAAI,CAACW,EAAE,CAAGxB,KAAK,CAAC0B,CAAC,CAAGL,IAAI,CAAC,CAAGlB,IAAI,CAACuB,CAAC,CAEjD,GAAI,CAAApE,UAAU,CAAG,GAAI,CAAAd,KAAK,CAAC0D,OAAO,CAChCkC,IAAI,CAAChB,QAAQ,CAAC,CAAGgB,IAAI,CAAChB,QAAQ,CAAG,IAAI,CAAC,CACtCmB,IAAI,CAACnB,QAAQ,CAAC,CAAGmB,IAAI,CAACnB,QAAQ,CAAG,IAAI,CAAC,CACtC,CACF,CAAC,CACD,GAAI,CAAAQ,SAAS,CAAG,GAAI,CAAApF,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAC5C,GAAI,CAAA2B,YAAY,CAAG,GAAI,CAAArF,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,EAAE,CAAC,CAC/C,MAAO,CAAA5C,UAAU,CAACwE,QAAQ,CAACF,SAAS,CAAC,CAACG,GAAG,CAACF,YAAY,CAAC,CACzD,CACF,CACF,CAAC,CAED,KAAM,CAAAe,GAAI,CACRC,WAAWA,CAACnD,SAAS,CAAgB,IAAd,CAAAoD,OAAO,CAAAC,SAAA,CAAAxF,MAAA,IAAAwF,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CAAC,CACjC,IAAI,CAACD,OAAO,CAAGA,OAAO,CACtB,GAAI,IAAI,CAACA,OAAO,CAACxF,UAAU,EAAI,IAAI,CAAE,CACnC,IAAI,CAACwF,OAAO,CAACxF,UAAU,CAAG,CACxB2D,QAAQ,CAAEgC,mBAAmB,CAC7B/B,aAAa,CAAEgC,iBACjB,CAAC,CACH,CACA,IAAI,CAACxD,SAAS,CAAGA,SAAS,CAC1B,IAAI,CAACyD,QAAQ,CAAG,GAAI,CAAA3G,KAAK,CAAC4G,aAAa,CAAC,CACtCC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IACT,CAAC,CAAC,CACF,IAAI,CAACH,QAAQ,CAACI,OAAO,CAAC7D,SAAS,CAAC8D,WAAW,CAAE9D,SAAS,CAAC+D,YAAY,CAAE,KAAK,CAAC,CAC3E,IAAI,CAACN,QAAQ,CAACO,aAAa,CAACC,MAAM,CAACC,gBAAgB,CAAC,CACpD,IAAI,CAACC,QAAQ,CAAG,GAAI,CAAAnH,cAAc,CAAC,IAAI,CAACyG,QAAQ,CAAC,CACjDzD,SAAS,CAACoE,MAAM,CAAC,IAAI,CAACX,QAAQ,CAACY,UAAU,CAAC,CAE1C,IAAI,CAACC,MAAM,CAAG,GAAI,CAAAxH,KAAK,CAACyH,iBAAiB,CACvCnB,OAAO,CAACnF,GAAG,CACX+B,SAAS,CAAC8D,WAAW,CAAG9D,SAAS,CAAC+D,YAAY,CAC9C,GAAG,CACH,KACF,CAAC,CACD,IAAI,CAACO,MAAM,CAACE,QAAQ,CAACvC,CAAC,CAAG,CAAC,CAAC,CAC3B,IAAI,CAACqC,MAAM,CAACE,QAAQ,CAACxC,CAAC,CAAG,CAAC,CAC1B,IAAI,CAACsC,MAAM,CAACE,QAAQ,CAACzC,CAAC,CAAG,CAAC,CAC1B,IAAI,CAAC0C,KAAK,CAAG,GAAI,CAAA3H,KAAK,CAAC4H,KAAK,CAAC,CAAC,CAC9B,IAAI,CAACD,KAAK,CAACnF,UAAU,CAAG,IAAI,CAE5B,GAAI,CAAAqF,GAAG,CAAG,GAAI,CAAA7H,KAAK,CAAC8H,GAAG,CACrBxB,OAAO,CAACjE,MAAM,CAACG,UAAU,CACzB8D,OAAO,CAACvF,MAAM,CAAG,GAAG,CACpBuF,OAAO,CAACvF,MAAM,CAAG,GACnB,CAAC,CACD,IAAI,CAAC4G,KAAK,CAACE,GAAG,CAAGA,GAAG,CACpB,IAAI,CAACE,WAAW,CAAG,CACjBC,QAAQ,CAAE,CAAEvE,KAAK,CAAEoE,GAAG,CAACI,KAAM,CAAC,CAC9BC,OAAO,CAAE,CAAEzE,KAAK,CAAEoE,GAAG,CAACM,IAAK,CAAC,CAC5BC,MAAM,CAAE,CAAE3E,KAAK,CAAEoE,GAAG,CAACQ,GAAI,CAC3B,CAAC,CACD,IAAI,CAACC,KAAK,CAAG,GAAI,CAAAtI,KAAK,CAACuI,KAAK,CAAC,CAAC,CAC9B,IAAI,CAACC,MAAM,CAAG,CAAC,CAAC,CAChB,IAAI,CAACC,QAAQ,CAAG,KAAK,CAErB,IAAI,CAACC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,IAAI,CAAErC,OAAO,CAAC,CACnC,IAAI,CAACsC,aAAa,CAAG,GAAI,CAAAC,SAAS,CAChC,IAAI,CACJvC,OAAO,CACPA,OAAO,CAACjE,MAAM,CAACM,QAAQ,CACvB2D,OAAO,CAACxE,eAAe,CACvB,GAAI,CAAA9B,KAAK,CAAC6D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAGyC,OAAO,CAAChF,aAAa,CAChD,CAAC,CACD,IAAI,CAACwH,cAAc,CAAG,GAAI,CAAAD,SAAS,CACjC,IAAI,CACJvC,OAAO,CACPA,OAAO,CAACjE,MAAM,CAACO,SAAS,CACxB0D,OAAO,CAACvE,iBAAiB,CACzB,GAAI,CAAA/B,KAAK,CAAC6D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAGyC,OAAO,CAAChF,aAAa,CAChD,CAAC,CACD,IAAI,CAACyH,UAAU,CAAG,GAAI,CAAAC,YAAY,CAAC,IAAI,CAAE1C,OAAO,CAAC,CAEjD,IAAI,CAAC2C,SAAS,CAAG3C,OAAO,CAACnF,GAAG,CAC5B,IAAI,CAAC+H,aAAa,CAAG,CAAC,CACtB,IAAI,CAAC7H,OAAO,CAAG,CAAC,CAChB,IAAI,CAAC8H,UAAU,CAAG,CAAC,CAEnB,IAAI,CAACC,IAAI,CAAG,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC,CAChC,IAAI,CAACC,IAAI,CAAG,IAAI,CAACA,IAAI,CAACD,IAAI,CAAC,IAAI,CAAC,CAChC,IAAI,CAACtC,OAAO,CAAG,IAAI,CAACA,OAAO,CAACsC,IAAI,CAAC,IAAI,CAAC,CACtC,IAAI,CAACE,WAAW,CAAG,IAAI,CAACA,WAAW,CAACF,IAAI,CAAC,IAAI,CAAC,CAC9C,IAAI,CAACG,SAAS,CAAG,IAAI,CAACA,SAAS,CAACH,IAAI,CAAC,IAAI,CAAC,CAE1ClC,MAAM,CAACsC,gBAAgB,CAAC,QAAQ,CAAE,IAAI,CAACC,cAAc,CAACL,IAAI,CAAC,IAAI,CAAC,CAAC,CACnE,CAEAK,cAAcA,CAAA,CAAG,CACf,KAAM,CAAAC,KAAK,CAAG,IAAI,CAACzG,SAAS,CAAC8D,WAAW,CACxC,KAAM,CAAA4C,MAAM,CAAG,IAAI,CAAC1G,SAAS,CAAC+D,YAAY,CAE1C,IAAI,CAACN,QAAQ,CAACI,OAAO,CAAC4C,KAAK,CAAEC,MAAM,CAAC,CACpC,IAAI,CAACpC,MAAM,CAACqC,MAAM,CAAGF,KAAK,CAAGC,MAAM,CACnC,IAAI,CAACpC,MAAM,CAACsC,sBAAsB,CAAC,CAAC,CACpC,IAAI,CAACzC,QAAQ,CAACN,OAAO,CAAC4C,KAAK,CAAEC,MAAM,CAAC,CACtC,CAEAG,UAAUA,CAAA,CAAG,CACX,IAAI,CAACC,UAAU,CAAG,GAAI,CAAA5J,UAAU,CAAC,IAAI,CAACuH,KAAK,CAAE,IAAI,CAACH,MAAM,CAAC,CACzD,IAAI,CAACyC,SAAS,CAAG,GAAI,CAAA9J,UAAU,CAC7B,IAAI,CAACqH,MAAM,CACX,GAAI,CAAAvH,WAAW,CAAC,CACdiK,kBAAkB,CAAE,GAAG,CACvBC,kBAAkB,CAAE,CAAC,CACrBC,eAAe,CAAE,CACnB,CAAC,CACH,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAlK,UAAU,CAC7B,IAAI,CAACqH,MAAM,CACX,GAAI,CAAAnH,UAAU,CAAC,CACbiK,MAAM,CAAEhK,UAAU,CAACiK,MAAM,CACzBC,WAAW,CAAEnK,UAAU,CAACoK,kBAAkB,CAC1CC,SAAS,CAAErK,UAAU,CAACsK,gBACxB,CAAC,CACH,CAAC,CACD,IAAI,CAACX,UAAU,CAACY,cAAc,CAAG,KAAK,CACtC,IAAI,CAACX,SAAS,CAACW,cAAc,CAAG,KAAK,CACrCP,QAAQ,CAACO,cAAc,CAAG,IAAI,CAC9B,IAAI,CAACvD,QAAQ,CAACwD,OAAO,CAAC,IAAI,CAACb,UAAU,CAAC,CACtC,IAAI,CAAC3C,QAAQ,CAACwD,OAAO,CAAC,IAAI,CAACZ,SAAS,CAAC,CACrC,IAAI,CAAC5C,QAAQ,CAACwD,OAAO,CAACR,QAAQ,CAAC,CACjC,CAEAS,UAAUA,CAAA,CAAG,CACX,KAAM,CAAAtC,MAAM,CAAG,IAAI,CAACA,MAAM,CAC1B,MAAO,IAAI,CAAAuC,OAAO,CAAEC,OAAO,EAAK,CAC9B,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAjL,KAAK,CAACkL,cAAc,CAACF,OAAO,CAAC,CAEjD,KAAM,CAAAR,WAAW,CAAG,GAAI,CAAAW,KAAK,CAAC,CAAC,CAC/B,KAAM,CAAAT,SAAS,CAAG,GAAI,CAAAS,KAAK,CAAC,CAAC,CAC7B3C,MAAM,CAAC4C,IAAI,CAAG,CAAC,CAAC,CAChBZ,WAAW,CAACf,gBAAgB,CAAC,MAAM,CAAE,UAAY,CAC/CjB,MAAM,CAAC4C,IAAI,CAACC,MAAM,CAAG,IAAI,CACzBJ,OAAO,CAACK,OAAO,CAAC,aAAa,CAAC,CAChC,CAAC,CAAC,CAEFZ,SAAS,CAACjB,gBAAgB,CAAC,MAAM,CAAE,UAAY,CAC7CjB,MAAM,CAAC4C,IAAI,CAACG,IAAI,CAAG,IAAI,CACvBN,OAAO,CAACK,OAAO,CAAC,WAAW,CAAC,CAC9B,CAAC,CAAC,CACFL,OAAO,CAACO,SAAS,CAAC,aAAa,CAAC,CAChCP,OAAO,CAACO,SAAS,CAAC,WAAW,CAAC,CAE9BhB,WAAW,CAACiB,GAAG,CAAGpL,UAAU,CAACoK,kBAAkB,CAC/CC,SAAS,CAACe,GAAG,CAAGpL,UAAU,CAACsK,gBAAgB,CAC7C,CAAC,CAAC,CACJ,CAEArB,IAAIA,CAAA,CAAG,CACL,IAAI,CAACS,UAAU,CAAC,CAAC,CACjB,KAAM,CAAAzD,OAAO,CAAG,IAAI,CAACA,OAAO,CAC5B,IAAI,CAACoC,IAAI,CAACY,IAAI,CAAC,CAAC,CAChB,IAAI,CAACV,aAAa,CAACU,IAAI,CAAC,CAAC,CAEzB,IAAI,CAACV,aAAa,CAAC8C,IAAI,CAAChE,QAAQ,CAACiE,IAAI,CACnC,CAACrF,OAAO,CAACtF,SAAS,CAAG,CAAC,CAAGsF,OAAO,CAACrF,WAAW,CAAG,CACjD,CAAC,CACD,IAAI,CAAC6H,cAAc,CAACQ,IAAI,CAAC,CAAC,CAC1B,IAAI,CAACR,cAAc,CAAC4C,IAAI,CAAChE,QAAQ,CAACiE,IAAI,CACpCrF,OAAO,CAACtF,SAAS,CAAG,CAAC,CAAGsF,OAAO,CAACrF,WAAW,CAAG,CAChD,CAAC,CACD,IAAI,CAAC8H,UAAU,CAACO,IAAI,CAAC,CAAC,CACtB,IAAI,CAACP,UAAU,CAAC2C,IAAI,CAAChE,QAAQ,CAACiE,IAAI,CAChC,EAAErF,OAAO,CAACtF,SAAS,CAAGsF,OAAO,CAACrF,WAAW,CAAG,CAAC,CAC/C,CAAC,CAED,IAAI,CAACiC,SAAS,CAACuG,gBAAgB,CAAC,WAAW,CAAE,IAAI,CAACF,WAAW,CAAC,CAC9D,IAAI,CAACrG,SAAS,CAACuG,gBAAgB,CAAC,SAAS,CAAE,IAAI,CAACD,SAAS,CAAC,CAC1D,IAAI,CAACtG,SAAS,CAACuG,gBAAgB,CAAC,UAAU,CAAE,IAAI,CAACD,SAAS,CAAC,CAE3D,IAAI,CAACJ,IAAI,CAAC,CAAC,CACb,CAEAG,WAAWA,CAACqC,EAAE,CAAE,CACd,GAAI,IAAI,CAACtF,OAAO,CAAC1F,SAAS,CAAE,IAAI,CAAC0F,OAAO,CAAC1F,SAAS,CAACgL,EAAE,CAAC,CACtD,IAAI,CAAC3C,SAAS,CAAG,IAAI,CAAC3C,OAAO,CAAClF,UAAU,CACxC,IAAI,CAAC8H,aAAa,CAAG,IAAI,CAAC5C,OAAO,CAACjF,OAAO,CAC3C,CAEAmI,SAASA,CAACoC,EAAE,CAAE,CACZ,GAAI,IAAI,CAACtF,OAAO,CAACzF,UAAU,CAAE,IAAI,CAACyF,OAAO,CAACzF,UAAU,CAAC+K,EAAE,CAAC,CACxD,IAAI,CAAC3C,SAAS,CAAG,IAAI,CAAC3C,OAAO,CAACnF,GAAG,CACjC,IAAI,CAAC+H,aAAa,CAAG,CAAC,CACxB,CAEA2C,MAAMA,CAACC,KAAK,CAAE,CACZ,GAAI,CAAAC,cAAc,CAAG1H,IAAI,CAAC2H,GAAG,CAAC,EAAE,CAAC,EAAE,CAAG3H,IAAI,CAAC4H,IAAI,CAAC,CAAC,CAAG,GAAG,CAAC,CAAC,CAAGH,KAAK,CAAC,CAClE,IAAI,CAACzK,OAAO,EAAI6K,IAAI,CAClB,IAAI,CAAC7K,OAAO,CACZ,IAAI,CAAC6H,aAAa,CAClB6C,cAAc,CACd,OACF,CAAC,CACD,IAAI,CAAC5C,UAAU,EAAI,IAAI,CAAC9H,OAAO,CAAGyK,KAAK,CAEvC,GAAI,CAAAjH,IAAI,CAAG,IAAI,CAACyD,KAAK,CAAC6D,WAAW,CAAG,IAAI,CAAChD,UAAU,CAEnD,IAAI,CAACL,cAAc,CAAC+C,MAAM,CAAChH,IAAI,CAAC,CAChC,IAAI,CAAC+D,aAAa,CAACiD,MAAM,CAAChH,IAAI,CAAC,CAC/B,IAAI,CAACkE,UAAU,CAAC8C,MAAM,CAAChH,IAAI,CAAC,CAC5B,IAAI,CAAC6D,IAAI,CAACmD,MAAM,CAAChH,IAAI,CAAC,CAEtB,GAAI,CAAAuH,YAAY,CAAG,KAAK,CACxB,GAAI,CAAAC,SAAS,CAAGH,IAAI,CAAC,IAAI,CAAC1E,MAAM,CAACrG,GAAG,CAAE,IAAI,CAAC8H,SAAS,CAAE8C,cAAc,CAAC,CACrE,GAAIM,SAAS,GAAK,CAAC,CAAE,CACnB,IAAI,CAAC7E,MAAM,CAACrG,GAAG,EAAIkL,SAAS,CAAGP,KAAK,CAAG,CAAC,CACxCM,YAAY,CAAG,IAAI,CACrB,CAEA,GAAI,IAAI,CAAC9F,OAAO,CAACxF,UAAU,CAAC6D,KAAK,CAAE,CACjC,KAAM,CAAA7D,UAAU,CAAG,IAAI,CAACwF,OAAO,CAACxF,UAAU,CAAC6D,KAAK,CAAC,KAAK,CAAEE,IAAI,CAAC,CAE7D,IAAI,CAAC2C,MAAM,CAAC8E,MAAM,CAChB,GAAI,CAAAtM,KAAK,CAAC0D,OAAO,CACf,IAAI,CAAC8D,MAAM,CAACE,QAAQ,CAACzC,CAAC,CAAGnE,UAAU,CAACmE,CAAC,CACrC,IAAI,CAACuC,MAAM,CAACE,QAAQ,CAACxC,CAAC,CAAGpE,UAAU,CAACoE,CAAC,CACrC,IAAI,CAACsC,MAAM,CAACE,QAAQ,CAACvC,CAAC,CAAGrE,UAAU,CAACqE,CACtC,CACF,CAAC,CACDiH,YAAY,CAAG,IAAI,CACrB,CACA,GAAIA,YAAY,CAAE,CAChB,IAAI,CAAC5E,MAAM,CAACsC,sBAAsB,CAAC,CAAC,CACtC,CAEA,GAAI,IAAI,CAACxD,OAAO,CAACiG,OAAO,CAAE,CACxBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnG,OAAO,CAACiG,OAAO,CAAC,CACnC,CACF,CAEAG,MAAMA,CAACZ,KAAK,CAAE,CACZ,IAAI,CAACzE,QAAQ,CAACqF,MAAM,CAACZ,KAAK,CAAC,CAC7B,CAEA7I,OAAOA,CAAA,CAAG,CACR,IAAI,CAACwF,QAAQ,CAAG,IAAI,CAEpB,GAAI,IAAI,CAAC9B,QAAQ,CAAE,CACjB,IAAI,CAACA,QAAQ,CAAC1D,OAAO,CAAC,CAAC,CACzB,CACA,GAAI,IAAI,CAACoE,QAAQ,CAAE,CACjB,IAAI,CAACA,QAAQ,CAACpE,OAAO,CAAC,CAAC,CACzB,CACA,GAAI,IAAI,CAAC0E,KAAK,CAAE,CACd,IAAI,CAACA,KAAK,CAACgF,KAAK,CAAC,CAAC,CACpB,CAEAxF,MAAM,CAACyF,mBAAmB,CAAC,QAAQ,CAAE,IAAI,CAAClD,cAAc,CAACL,IAAI,CAAC,IAAI,CAAC,CAAC,CACpE,GAAI,IAAI,CAACnG,SAAS,CAAE,CAClB,IAAI,CAACA,SAAS,CAAC0J,mBAAmB,CAAC,WAAW,CAAE,IAAI,CAACrD,WAAW,CAAC,CACjE,IAAI,CAACrG,SAAS,CAAC0J,mBAAmB,CAAC,SAAS,CAAE,IAAI,CAACpD,SAAS,CAAC,CAC7D,IAAI,CAACtG,SAAS,CAAC0J,mBAAmB,CAAC,UAAU,CAAE,IAAI,CAACpD,SAAS,CAAC,CAChE,CACF,CAEAzC,OAAOA,CAAC4C,KAAK,CAAEC,MAAM,CAAEiD,YAAY,CAAE,CACnC,IAAI,CAACxF,QAAQ,CAACN,OAAO,CAAC4C,KAAK,CAAEC,MAAM,CAAEiD,YAAY,CAAC,CACpD,CAEAzD,IAAIA,CAAA,CAAG,CACL,GAAI,IAAI,CAACX,QAAQ,EAAI,CAAC,IAAI,CAAE,OAC5B,GAAIqE,2BAA2B,CAAC,IAAI,CAACnG,QAAQ,CAAE,IAAI,CAACI,OAAO,CAAC,CAAE,CAC5D,KAAM,CAAAgG,MAAM,CAAG,IAAI,CAACpG,QAAQ,CAACY,UAAU,CACvC,IAAI,CAACC,MAAM,CAACqC,MAAM,CAAGkD,MAAM,CAACC,WAAW,CAAGD,MAAM,CAACE,YAAY,CAC7D,IAAI,CAACzF,MAAM,CAACsC,sBAAsB,CAAC,CAAC,CACtC,CACA,KAAM,CAAAgC,KAAK,CAAG,IAAI,CAACxD,KAAK,CAAC4E,QAAQ,CAAC,CAAC,CACnC,IAAI,CAACR,MAAM,CAACZ,KAAK,CAAC,CAClB,IAAI,CAACD,MAAM,CAACC,KAAK,CAAC,CAClBqB,qBAAqB,CAAC,IAAI,CAAC/D,IAAI,CAAC,CAClC,CACF,CAEA,KAAM,CAAA3C,mBAAmB,CAAG,CAC1B2G,YAAY,CAAE,CAAE3J,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC6D,OAAO,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CACjDwJ,YAAY,CAAE,CAAE5J,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAAC6D,OAAO,CAAC,CAAC,EAAE,CAAE,GAAG,CAAE,CACrD,CAAC,CAED,KAAM,CAAA6C,iBAAiB,2lBAmBtB,CAED,KAAM,CAAA4G,MAAM,CAAGC,IAAI,EAAI,CACrB,GAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,CAAE,MAAO,CAAAlJ,IAAI,CAACiJ,MAAM,CAAC,CAAC,EAAIC,IAAI,CAAC,CAAC,CAAC,CAAGA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAGA,IAAI,CAAC,CAAC,CAAC,CAC7E,MAAO,CAAAlJ,IAAI,CAACiJ,MAAM,CAAC,CAAC,CAAGC,IAAI,CAC7B,CAAC,CAED,KAAM,CAAAG,UAAU,CAAGC,GAAG,EAAI,CACxB,GAAIH,KAAK,CAACC,OAAO,CAACE,GAAG,CAAC,CAAE,MAAO,CAAAA,GAAG,CAACtJ,IAAI,CAACuJ,KAAK,CAACvJ,IAAI,CAACiJ,MAAM,CAAC,CAAC,CAAGK,GAAG,CAAC5M,MAAM,CAAC,CAAC,CAC1E,MAAO,CAAA4M,GAAG,CACZ,CAAC,CAED,QAAS,CAAAzB,IAAIA,CAAClJ,OAAO,CAAE6K,MAAM,CAA8B,IAA5B,CAAAC,KAAK,CAAAvH,SAAA,CAAAxF,MAAA,IAAAwF,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,GAAG,IAAE,CAAAwH,KAAK,CAAAxH,SAAA,CAAAxF,MAAA,IAAAwF,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,KAAK,CACvD,GAAI,CAAAyH,MAAM,CAAG,CAACH,MAAM,CAAG7K,OAAO,EAAI8K,KAAK,CACvC,GAAIzJ,IAAI,CAAC4J,GAAG,CAACD,MAAM,CAAC,CAAGD,KAAK,CAAE,CAC5BC,MAAM,CAAGH,MAAM,CAAG7K,OAAO,CAC3B,CACA,MAAO,CAAAgL,MAAM,CACf,CAEA,KAAM,CAAAnF,SAAU,CACdxC,WAAWA,CAAC6H,KAAK,CAAE5H,OAAO,CAAEjE,MAAM,CAAEyL,KAAK,CAAEK,IAAI,CAAE,CAC/C,IAAI,CAACD,KAAK,CAAGA,KAAK,CAClB,IAAI,CAAC5H,OAAO,CAAGA,OAAO,CACtB,IAAI,CAACjE,MAAM,CAAGA,MAAM,CACpB,IAAI,CAACyL,KAAK,CAAGA,KAAK,CAClB,IAAI,CAACK,IAAI,CAAGA,IAAI,CAClB,CAEA7E,IAAIA,CAAA,CAAG,CACL,KAAM,CAAAhD,OAAO,CAAG,IAAI,CAACA,OAAO,CAC5B,GAAI,CAAA8H,KAAK,CAAG,GAAI,CAAApO,KAAK,CAACqO,UAAU,CAC9B,GAAI,CAAArO,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC1B,GAAI,CAAA1D,KAAK,CAAC0D,OAAO,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC5B,CAAC,CACD,GAAI,CAAA4K,QAAQ,CAAG,GAAI,CAAAtO,KAAK,CAACuO,YAAY,CAACH,KAAK,CAAE,EAAE,CAAE,CAAC,CAAE,CAAC,CAAE,KAAK,CAAC,CAE7D,GAAI,CAAAI,SAAS,CAAG,GAAI,CAAAxO,KAAK,CAACyO,uBAAuB,CAAC,CAAC,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAClEE,SAAS,CAACG,aAAa,CAAGrI,OAAO,CAAC9E,oBAAoB,CAAG,CAAC,CAE1D,GAAI,CAAAoN,SAAS,CAAGtI,OAAO,CAACtF,SAAS,CAAGsF,OAAO,CAACpF,YAAY,CAExD,GAAI,CAAA2N,OAAO,CAAG,EAAE,CAChB,GAAI,CAAAC,QAAQ,CAAG,EAAE,CACjB,GAAI,CAAAC,MAAM,CAAG,EAAE,CAEf,GAAI,CAAA1M,MAAM,CAAG,IAAI,CAACA,MAAM,CACxB,GAAImL,KAAK,CAACC,OAAO,CAACpL,MAAM,CAAC,CAAE,CACzBA,MAAM,CAAGA,MAAM,CAAC2M,GAAG,CAACC,CAAC,EAAI,GAAI,CAAAjP,KAAK,CAACkP,KAAK,CAACD,CAAC,CAAC,CAAC,CAC9C,CAAC,IAAM,CACL5M,MAAM,CAAG,GAAI,CAAArC,KAAK,CAACkP,KAAK,CAAC7M,MAAM,CAAC,CAClC,CAEA,IAAK,GAAI,CAAA8M,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG7I,OAAO,CAAC9E,oBAAoB,CAAE2N,CAAC,EAAE,CAAE,CACrD,GAAI,CAAAC,MAAM,CAAG9B,MAAM,CAAChH,OAAO,CAACrE,eAAe,CAAC,CAC5C,GAAI,CAAAlB,MAAM,CAAGuM,MAAM,CAAChH,OAAO,CAACtE,eAAe,CAAC,CAC5C,GAAI,CAAA8L,KAAK,CAAGR,MAAM,CAAC,IAAI,CAACQ,KAAK,CAAC,CAE9B,GAAI,CAAAuB,OAAO,CAAGF,CAAC,CAAG7I,OAAO,CAACpF,YAAY,CACtC,GAAI,CAAAoO,KAAK,CAAGD,OAAO,CAAGT,SAAS,CAAGtI,OAAO,CAACtF,SAAS,CAAG,CAAC,CAAG4N,SAAS,CAAG,CAAC,CAEvE,GAAI,CAAAW,QAAQ,CAAGjC,MAAM,CAAChH,OAAO,CAACpE,kBAAkB,CAAC,CAAG0M,SAAS,CAC7D,GAAI,CAAAzM,SAAS,CAAGmL,MAAM,CAAChH,OAAO,CAACnE,SAAS,CAAC,CAAGyM,SAAS,CACrDU,KAAK,EAAInN,SAAS,CAElB,GAAI,CAAAqN,OAAO,CAAGlC,MAAM,CAAChH,OAAO,CAAClE,kBAAkB,CAAC,CAAGgN,MAAM,CAAG,GAAG,CAE/D,GAAI,CAAAK,OAAO,CAAG,CAACnC,MAAM,CAAChH,OAAO,CAACvF,MAAM,CAAC,CAErC8N,OAAO,CAACa,IAAI,CAACJ,KAAK,CAAGC,QAAQ,CAAG,CAAC,CAAC,CAClCV,OAAO,CAACa,IAAI,CAACF,OAAO,CAAC,CACrBX,OAAO,CAACa,IAAI,CAACD,OAAO,CAAC,CAErBZ,OAAO,CAACa,IAAI,CAACJ,KAAK,CAAGC,QAAQ,CAAG,CAAC,CAAC,CAClCV,OAAO,CAACa,IAAI,CAACF,OAAO,CAAC,CACrBX,OAAO,CAACa,IAAI,CAACD,OAAO,CAAC,CAErBX,QAAQ,CAACY,IAAI,CAACN,MAAM,CAAC,CACrBN,QAAQ,CAACY,IAAI,CAAC3O,MAAM,CAAC,CACrB+N,QAAQ,CAACY,IAAI,CAAC5B,KAAK,CAAC,CAEpBgB,QAAQ,CAACY,IAAI,CAACN,MAAM,CAAC,CACrBN,QAAQ,CAACY,IAAI,CAAC3O,MAAM,CAAC,CACrB+N,QAAQ,CAACY,IAAI,CAAC5B,KAAK,CAAC,CAEpB,GAAI,CAAA7F,KAAK,CAAGyF,UAAU,CAACrL,MAAM,CAAC,CAC9B0M,MAAM,CAACW,IAAI,CAACzH,KAAK,CAAC0H,CAAC,CAAC,CACpBZ,MAAM,CAACW,IAAI,CAACzH,KAAK,CAAC2H,CAAC,CAAC,CACpBb,MAAM,CAACW,IAAI,CAACzH,KAAK,CAAC4H,CAAC,CAAC,CAEpBd,MAAM,CAACW,IAAI,CAACzH,KAAK,CAAC0H,CAAC,CAAC,CACpBZ,MAAM,CAACW,IAAI,CAACzH,KAAK,CAAC2H,CAAC,CAAC,CACpBb,MAAM,CAACW,IAAI,CAACzH,KAAK,CAAC4H,CAAC,CAAC,CACtB,CAEArB,SAAS,CAACsB,YAAY,CACpB,SAAS,CACT,GAAI,CAAA9P,KAAK,CAAC+P,wBAAwB,CAAC,GAAI,CAAAC,YAAY,CAACnB,OAAO,CAAC,CAAE,CAAC,CAAE,KAAK,CACxE,CAAC,CACDL,SAAS,CAACsB,YAAY,CACpB,UAAU,CACV,GAAI,CAAA9P,KAAK,CAAC+P,wBAAwB,CAAC,GAAI,CAAAC,YAAY,CAAClB,QAAQ,CAAC,CAAE,CAAC,CAAE,KAAK,CACzE,CAAC,CACDN,SAAS,CAACsB,YAAY,CACpB,QAAQ,CACR,GAAI,CAAA9P,KAAK,CAAC+P,wBAAwB,CAAC,GAAI,CAAAC,YAAY,CAACjB,MAAM,CAAC,CAAE,CAAC,CAAE,KAAK,CACvE,CAAC,CAED,GAAI,CAAAkB,QAAQ,CAAG,GAAI,CAAAjQ,KAAK,CAACkQ,cAAc,CAAC,CACtCC,cAAc,CAAEC,iBAAiB,CACjCC,YAAY,CAAEC,eAAe,CAC7BC,WAAW,CAAE,IAAI,CACjB9L,QAAQ,CAAE+L,MAAM,CAACC,MAAM,CACrB,CACEC,KAAK,CAAE,CAAEjN,KAAK,CAAE,CAAE,CAAC,CACnBkN,aAAa,CAAE,CAAElN,KAAK,CAAE6C,OAAO,CAACvF,MAAO,CAAC,CACxC6P,KAAK,CAAE,CAAEnN,KAAK,CAAE,IAAI,CAAC0K,IAAK,CAC5B,CAAC,CACD,IAAI,CAACD,KAAK,CAACnG,WAAW,CACtBzB,OAAO,CAACxF,UAAU,CAAC2D,QACrB,CACF,CAAC,CAAC,CAEFwL,QAAQ,CAACY,eAAe,CAAGC,MAAM,EAAI,CACnCA,MAAM,CAACT,YAAY,CAAGS,MAAM,CAACT,YAAY,CAACU,OAAO,CAC/C,iCAAiC,CACjCzK,OAAO,CAACxF,UAAU,CAAC4D,aACrB,CAAC,CACH,CAAC,CAED,GAAI,CAAAgH,IAAI,CAAG,GAAI,CAAA1L,KAAK,CAACgR,IAAI,CAACxC,SAAS,CAAEyB,QAAQ,CAAC,CAC9CvE,IAAI,CAACuF,aAAa,CAAG,KAAK,CAC1B,IAAI,CAAC/C,KAAK,CAACvG,KAAK,CAACpC,GAAG,CAACmG,IAAI,CAAC,CAC1B,IAAI,CAACA,IAAI,CAAGA,IAAI,CAClB,CAEAG,MAAMA,CAAChH,IAAI,CAAE,CACX,IAAI,CAAC6G,IAAI,CAACuE,QAAQ,CAACxL,QAAQ,CAACiM,KAAK,CAACjN,KAAK,CAAGoB,IAAI,CAChD,CACF,CAEA,KAAM,CAAAuL,iBAAiB,oCAAAc,MAAA,CAEnBlR,KAAK,CAACmR,WAAW,CAAC,mBAAmB,CAAC,gTAAAD,MAAA,CASpClR,KAAK,CAACmR,WAAW,CAAC,cAAc,CAAC,mBAEtC,CAED,KAAM,CAAAb,eAAe,oCAAAY,MAAA,CAEjBlR,KAAK,CAACmR,WAAW,CAAC,iBAAiB,CAAC,05BAAAD,MAAA,CA4BlClR,KAAK,CAACmR,WAAW,CAAC,YAAY,CAAC,mBAEpC,CAED,KAAM,CAAAnI,YAAa,CACjB3C,WAAWA,CAAC6H,KAAK,CAAE5H,OAAO,CAAE,CAC1B,IAAI,CAAC4H,KAAK,CAAGA,KAAK,CAClB,IAAI,CAAC5H,OAAO,CAAGA,OAAO,CACxB,CAEAgD,IAAIA,CAAA,CAAG,CACL,KAAM,CAAAhD,OAAO,CAAG,IAAI,CAACA,OAAO,CAC5B,KAAM,CAAAgI,QAAQ,CAAG,GAAI,CAAAtO,KAAK,CAACoR,aAAa,CAAC,CAAC,CAAE,CAAC,CAAC,CAC9C,GAAI,CAAA5C,SAAS,CAAG,GAAI,CAAAxO,KAAK,CAACyO,uBAAuB,CAAC,CAAC,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAClE,GAAI,CAAA+C,WAAW,CAAG/K,OAAO,CAAC/E,oBAAoB,CAC9CiN,SAAS,CAACG,aAAa,CAAG0C,WAAW,CAErC,GAAI,CAAAC,WAAW,CAAGhL,OAAO,CAACvF,MAAM,EAAIsQ,WAAW,CAAG,CAAC,CAAC,CACpD,KAAM,CAAAxC,OAAO,CAAG,EAAE,CAClB,KAAM,CAAAE,MAAM,CAAG,EAAE,CACjB,KAAM,CAAAD,QAAQ,CAAG,EAAE,CAEnB,GAAI,CAAAzM,MAAM,CAAGiE,OAAO,CAACjE,MAAM,CAACQ,MAAM,CAClC,GAAI2K,KAAK,CAACC,OAAO,CAACpL,MAAM,CAAC,CAAE,CACzBA,MAAM,CAAGA,MAAM,CAAC2M,GAAG,CAACC,CAAC,EAAI,GAAI,CAAAjP,KAAK,CAACkP,KAAK,CAACD,CAAC,CAAC,CAAC,CAC9C,CAAC,IAAM,CACL5M,MAAM,CAAG,GAAI,CAAArC,KAAK,CAACkP,KAAK,CAAC7M,MAAM,CAAC,CAClC,CAEA,IAAK,GAAI,CAAA8M,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGkC,WAAW,CAAElC,CAAC,EAAE,CAAE,CACpC,GAAI,CAAAxF,KAAK,CAAG2D,MAAM,CAAChH,OAAO,CAAC1E,eAAe,CAAC,CAC3C,GAAI,CAAAgI,MAAM,CAAG0D,MAAM,CAAChH,OAAO,CAACzE,gBAAgB,CAAC,CAC7CgN,OAAO,CAACa,IAAI,CAAC,CAACP,CAAC,CAAG,CAAC,EAAImC,WAAW,CAAG,CAAC,CAAGA,WAAW,CAAGjN,IAAI,CAACiJ,MAAM,CAAC,CAAC,CAAC,CAErE,GAAI,CAAArF,KAAK,CAAGyF,UAAU,CAACrL,MAAM,CAAC,CAC9B0M,MAAM,CAACW,IAAI,CAACzH,KAAK,CAAC0H,CAAC,CAAC,CACpBZ,MAAM,CAACW,IAAI,CAACzH,KAAK,CAAC2H,CAAC,CAAC,CACpBb,MAAM,CAACW,IAAI,CAACzH,KAAK,CAAC4H,CAAC,CAAC,CAEpBf,QAAQ,CAACY,IAAI,CAAC/F,KAAK,CAAC,CACpBmF,QAAQ,CAACY,IAAI,CAAC9F,MAAM,CAAC,CACvB,CAEA4E,SAAS,CAACsB,YAAY,CACpB,SAAS,CACT,GAAI,CAAA9P,KAAK,CAAC+P,wBAAwB,CAAC,GAAI,CAAAC,YAAY,CAACnB,OAAO,CAAC,CAAE,CAAC,CAAE,KAAK,CACxE,CAAC,CACDL,SAAS,CAACsB,YAAY,CACpB,QAAQ,CACR,GAAI,CAAA9P,KAAK,CAAC+P,wBAAwB,CAAC,GAAI,CAAAC,YAAY,CAACjB,MAAM,CAAC,CAAE,CAAC,CAAE,KAAK,CACvE,CAAC,CACDP,SAAS,CAACsB,YAAY,CACpB,UAAU,CACV,GAAI,CAAA9P,KAAK,CAAC+P,wBAAwB,CAAC,GAAI,CAAAC,YAAY,CAAClB,QAAQ,CAAC,CAAE,CAAC,CAAE,KAAK,CACzE,CAAC,CAED,KAAM,CAAAmB,QAAQ,CAAG,GAAI,CAAAjQ,KAAK,CAACkQ,cAAc,CAAC,CACxCC,cAAc,CAAEoB,kBAAkB,CAClClB,YAAY,CAAEmB,gBAAgB,CAC9BC,IAAI,CAAEzR,KAAK,CAAC0R,UAAU,CACtBjN,QAAQ,CAAE+L,MAAM,CAACC,MAAM,CACrB,CACEE,aAAa,CAAE,CAAElN,KAAK,CAAE6C,OAAO,CAACvF,MAAO,CAAC,CACxC2P,KAAK,CAAE,CAAEjN,KAAK,CAAE,CAAE,CACpB,CAAC,CACD,IAAI,CAACyK,KAAK,CAACnG,WAAW,CACtBzB,OAAO,CAACxF,UAAU,CAAC2D,QACrB,CACF,CAAC,CAAC,CAEFwL,QAAQ,CAACY,eAAe,CAAGC,MAAM,EAAI,CACnCA,MAAM,CAACT,YAAY,CAAGS,MAAM,CAACT,YAAY,CAACU,OAAO,CAC/C,iCAAiC,CACjCzK,OAAO,CAACxF,UAAU,CAAC4D,aACrB,CAAC,CACH,CAAC,CAED,KAAM,CAAAgH,IAAI,CAAG,GAAI,CAAA1L,KAAK,CAACgR,IAAI,CAACxC,SAAS,CAAEyB,QAAQ,CAAC,CAChDvE,IAAI,CAACuF,aAAa,CAAG,KAAK,CAC1B,IAAI,CAAC/C,KAAK,CAACvG,KAAK,CAACpC,GAAG,CAACmG,IAAI,CAAC,CAC1B,IAAI,CAACA,IAAI,CAAGA,IAAI,CAClB,CAEAG,MAAMA,CAAChH,IAAI,CAAE,CACX,IAAI,CAAC6G,IAAI,CAACuE,QAAQ,CAACxL,QAAQ,CAACiM,KAAK,CAACjN,KAAK,CAAGoB,IAAI,CAChD,CACF,CAEA,KAAM,CAAA2M,gBAAgB,oCAAAN,MAAA,CAElBlR,KAAK,CAACmR,WAAW,CAAC,iBAAiB,CAAC,gsCAAAD,MAAA,CAkClClR,KAAK,CAACmR,WAAW,CAAC,YAAY,CAAC,mBAEpC,CAED,KAAM,CAAAI,kBAAkB,oCAAAL,MAAA,CAEpBlR,KAAK,CAACmR,WAAW,CAAC,mBAAmB,CAAC,2IAAAD,MAAA,CAKpClR,KAAK,CAACmR,WAAW,CAAC,cAAc,CAAC,mBAEtC,CAED,KAAM,CAAAxI,IAAK,CACTtC,WAAWA,CAAC6H,KAAK,CAAE5H,OAAO,CAAE,CAC1B,IAAI,CAAC4H,KAAK,CAAGA,KAAK,CAClB,IAAI,CAAC5H,OAAO,CAAGA,OAAO,CACtB,IAAI,CAACoK,KAAK,CAAG,CAAEjN,KAAK,CAAE,CAAE,CAAC,CAC3B,CAEAkO,WAAWA,CAACF,IAAI,CAAE9H,KAAK,CAAEiI,MAAM,CAAE,CAC/B,KAAM,CAAAtL,OAAO,CAAG,IAAI,CAACA,OAAO,CAC5B,GAAI,CAAAuL,QAAQ,CAAG,GAAG,CAClB,KAAM,CAAAvD,QAAQ,CAAG,GAAI,CAAAtO,KAAK,CAACoR,aAAa,CACtCQ,MAAM,CAAGtL,OAAO,CAACtF,SAAS,CAAGsF,OAAO,CAACrF,WAAW,CAChDqF,OAAO,CAACvF,MAAM,CACd,EAAE,CACF8Q,QACF,CAAC,CACD,GAAI,CAAApN,QAAQ,CAAG,CACbkM,aAAa,CAAE,CAAElN,KAAK,CAAE6C,OAAO,CAACvF,MAAO,CAAC,CACxC+Q,MAAM,CAAE,CAAErO,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAACkP,KAAK,CAAC0C,MAAM,CAAGtL,OAAO,CAACjE,MAAM,CAACC,SAAS,CAAGgE,OAAO,CAACjE,MAAM,CAACE,WAAW,CAAE,CAAC,CAClGmO,KAAK,CAAE,IAAI,CAACA,KACd,CAAC,CAED,GAAIkB,MAAM,CAAE,CACVnN,QAAQ,CAAG+L,MAAM,CAACC,MAAM,CAAChM,QAAQ,CAAE,CACjCsN,MAAM,CAAE,CAAEtO,KAAK,CAAE6C,OAAO,CAACpF,YAAa,CAAC,CACvC8Q,iBAAiB,CAAE,CAAEvO,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAACkP,KAAK,CAAC5I,OAAO,CAACjE,MAAM,CAACK,WAAW,CAAE,CAAC,CACzEuP,mBAAmB,CAAE,CAAExO,KAAK,CAAE,GAAI,CAAAzD,KAAK,CAACkP,KAAK,CAAC5I,OAAO,CAACjE,MAAM,CAACI,aAAa,CAAE,CAAC,CAC7EyP,6BAA6B,CAAE,CAAEzO,KAAK,CAAE6C,OAAO,CAAC7E,4BAA6B,CAAC,CAC9E0Q,4BAA4B,CAAE,CAAE1O,KAAK,CAAE6C,OAAO,CAAC3E,2BAA4B,CAAC,CAC5EyQ,2BAA2B,CAAE,CAAE3O,KAAK,CAAE6C,OAAO,CAAC5E,0BAA2B,CAC3E,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAuO,QAAQ,CAAG,GAAI,CAAAjQ,KAAK,CAACkQ,cAAc,CAAC,CACxCC,cAAc,CAAEyB,MAAM,CAAGS,YAAY,CAAGC,cAAc,CACtDjC,YAAY,CAAEkC,UAAU,CACxBd,IAAI,CAAEzR,KAAK,CAAC0R,UAAU,CACtBjN,QAAQ,CAAE+L,MAAM,CAACC,MAAM,CACrBhM,QAAQ,CACR,IAAI,CAACyJ,KAAK,CAACnG,WAAW,CACtBzB,OAAO,CAACxF,UAAU,CAAC2D,QACrB,CACF,CAAC,CAAC,CAEFwL,QAAQ,CAACY,eAAe,CAAGC,MAAM,EAAI,CACnCA,MAAM,CAACT,YAAY,CAAGS,MAAM,CAACT,YAAY,CAACU,OAAO,CAC/C,iCAAiC,CACjCzK,OAAO,CAACxF,UAAU,CAAC4D,aACrB,CAAC,CACH,CAAC,CAED,KAAM,CAAAgH,IAAI,CAAG,GAAI,CAAA1L,KAAK,CAACgR,IAAI,CAAC1C,QAAQ,CAAE2B,QAAQ,CAAC,CAC/CvE,IAAI,CAAC8G,QAAQ,CAACvN,CAAC,CAAG,CAACZ,IAAI,CAACW,EAAE,CAAG,CAAC,CAC9B0G,IAAI,CAAChE,QAAQ,CAACvC,CAAC,CAAG,CAACmB,OAAO,CAACvF,MAAM,CAAG,CAAC,CACrC2K,IAAI,CAAChE,QAAQ,CAACzC,CAAC,EACb,CAAC,IAAI,CAACqB,OAAO,CAACrF,WAAW,CAAG,CAAC,CAAGqF,OAAO,CAACtF,SAAS,CAAG,CAAC,EAAIyQ,IAAI,CAC/D,IAAI,CAACvD,KAAK,CAACvG,KAAK,CAACpC,GAAG,CAACmG,IAAI,CAAC,CAE1B,MAAO,CAAAA,IAAI,CACb,CAEApC,IAAIA,CAAA,CAAG,CACL,IAAI,CAACmJ,WAAW,CAAG,IAAI,CAACd,WAAW,CAAC,CAAC,CAAC,CAAE,IAAI,CAACrL,OAAO,CAACtF,SAAS,CAAE,IAAI,CAAC,CACrE,IAAI,CAAC0R,YAAY,CAAG,IAAI,CAACf,WAAW,CAAC,CAAC,CAAE,IAAI,CAACrL,OAAO,CAACtF,SAAS,CAAE,IAAI,CAAC,CACrE,IAAI,CAAC2R,MAAM,CAAG,IAAI,CAAChB,WAAW,CAAC,CAAC,CAAE,IAAI,CAACrL,OAAO,CAACrF,WAAW,CAAE,KAAK,CAAC,CACpE,CAEA4K,MAAMA,CAAChH,IAAI,CAAE,CACX,IAAI,CAAC6L,KAAK,CAACjN,KAAK,CAAGoB,IAAI,CACzB,CACF,CAEA,KAAM,CAAA+N,gBAAgB,0JAAA1B,MAAA,CAMlBlR,KAAK,CAACmR,WAAW,CAAC,mBAAmB,CAAC,mLAAAD,MAAA,CAMpClR,KAAK,CAACmR,WAAW,CAAC,cAAc,CAAC,mBAEtC,CAED,KAAM,CAAAmB,cAAc,CAAGM,gBAAgB,CACpC7B,OAAO,CAAC,kCAAkC,CAAE,EAAE,CAAC,CAC/CA,OAAO,CAAC,8BAA8B,CAAE,EAAE,CAAC,CAE9C,KAAM,CAAA8B,iBAAiB,oiBAetB,CAED,KAAM,CAAAC,qBAAqB,6hBAU1B,CAED,KAAM,CAAAT,YAAY,CAAGO,gBAAgB,CAClC7B,OAAO,CAAC,kCAAkC,CAAE+B,qBAAqB,CAAC,CAClE/B,OAAO,CAAC,8BAA8B,CAAE8B,iBAAiB,CAAC,CAE7D,KAAM,CAAAN,UAAU,gEAAArB,MAAA,CAGZlR,KAAK,CAACmR,WAAW,CAAC,iBAAiB,CAAC,0iBAAAD,MAAA,CAclClR,KAAK,CAACmR,WAAW,CAAC,YAAY,CAAC,mBAEpC,CAED,QAAS,CAAArE,2BAA2BA,CAACnG,QAAQ,CAAEI,OAAO,CAAE,CACtD,KAAM,CAAAgG,MAAM,CAAGpG,QAAQ,CAACY,UAAU,CAClC,KAAM,CAAAoC,KAAK,CAAGoD,MAAM,CAACC,WAAW,CAChC,KAAM,CAAApD,MAAM,CAAGmD,MAAM,CAACE,YAAY,CAClC,KAAM,CAAA8F,UAAU,CAAGhG,MAAM,CAACpD,KAAK,GAAKA,KAAK,EAAIoD,MAAM,CAACnD,MAAM,GAAKA,MAAM,CACrE,GAAImJ,UAAU,CAAE,CACdhM,OAAO,CAAC4C,KAAK,CAAEC,MAAM,CAAE,KAAK,CAAC,CAC/B,CACA,MAAO,CAAAmJ,UAAU,CACnB,CAEA,CAAC,UAAY,CACX,KAAM,CAAA7P,SAAS,CAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CACnD,KAAM,CAAAkD,OAAO,CAAA0M,aAAA,IAAQrS,aAAa,CAAE,CACpC2F,OAAO,CAACxF,UAAU,CAAGyD,WAAW,CAAC+B,OAAO,CAACxF,UAAU,CAAC,CAEpD,KAAM,CAAAmS,KAAK,CAAG,GAAI,CAAA7M,GAAG,CAAClD,SAAS,CAAEoD,OAAO,CAAC,CACzCvD,MAAM,CAACC,OAAO,CAAGiQ,KAAK,CACtBA,KAAK,CAACnI,UAAU,CAAC,CAAC,CAACoI,IAAI,CAACD,KAAK,CAAC3J,IAAI,CAAC,CACrC,CAAC,EAAE,CAAC,CAEJ,MAAO,IAAM,CACX,GAAIvG,MAAM,CAACC,OAAO,CAAE,CAClBD,MAAM,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC,CAC1B,CACF,CAAC,CACH,CAAC,CAAE,CAACtC,aAAa,CAAC,CAAC,CAEnB,mBACEH,IAAA,QAAK2S,EAAE,CAAC,QAAQ,CAACC,SAAS,CAAC,eAAe,CAACC,GAAG,CAAEvQ,UAAW,CAAM,CAAC,CAEtE,CAAC,CAED,cAAe,CAAArC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}