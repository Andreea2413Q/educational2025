{"ast":null,"code":"import _objectSpread from\"/workspaces/educational2025/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from'react';import{User}from'lucide-react';import{getFirestore,collection,onSnapshot}from'firebase/firestore';import{useAuth}from'../Cont/authContext';import Iridescence from'./iridence';import QuizCard from'./quiz-card';import QuizHeader from'./quiz-in-run';import QuizQuestion from'./quiz-intrebari';import QuizResults from'./rezultate-quiz';import ContrastSiAccesibilitate from'./Intrebari/contrast_si_accesibilitate.json';import fundamentaleData from'./Intrebari/fundamentale.json';import psihologia from'./Intrebari/psihologia.json';import armonie from'./Intrebari/armonie.json';import design from'./Intrebari/design.json';import simboluri from'./Intrebari/simboluri.json';import perceptia from'./Intrebari/perceptia.json';import temperatura from'./Intrebari/temperatura.json';import natura from'./Intrebari/natura.json';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const db=getFirestore();const QuizApp=()=>{const{currentUser}=useAuth();const[availableQuizzes,setAvailableQuizzes]=useState([]);const[currentQuiz,setCurrentQuiz]=useState(null);const[currentQuestion,setCurrentQuestion]=useState(0);const[selectedAnswers,setSelectedAnswers]=useState({});const[showResults,setShowResults]=useState(false);const[score,setScore]=useState(0);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[quizProgress,setQuizProgress]=useState({});const[timeLeft,setTimeLeft]=useState(0);const[timerActive,setTimerActive]=useState(false);const quizDataMap={'fundamentale.json':fundamentaleData,'contrast_si_accesibilitate.json':ContrastSiAccesibilitate,'psihologia.json':psihologia,'armonie.json':armonie,'design.json':design,'simboluri.json':simboluri,'perceptia.json':perceptia,'temperatura.json':temperatura,'natura.json':natura};const quizFiles=['fundamentale.json','contrast_si_accesibilitate.json','psihologia.json','armonie.json','design.json','simboluri.json','perceptia.json','temperatura.json','natura.json'];useEffect(()=>{let interval=null;if(timerActive&&timeLeft>0){interval=setInterval(()=>{setTimeLeft(time=>{if(time<=1){setTimerActive(false);handleTimeUp();return 0;}return time-1;});},1000);}else if(timeLeft===0&&timerActive){setTimerActive(false);}return()=>clearInterval(interval);},[timerActive,timeLeft]);useEffect(()=>{loadProgress();},[currentUser]);useEffect(()=>{const loadAllQuizzes=async()=>{try{const quizzesData=[];for(const fileName of quizFiles){try{const data=quizDataMap[fileName];if(data){quizzesData.push(data);}}catch(err){console.error(\"Eroare la \\xEEnc\\u0103rcarea \".concat(fileName,\":\"),err);}}setAvailableQuizzes(quizzesData);setLoading(false);}catch(err){setError('Eroare la încărcarea quiz-urilor');setLoading(false);}};loadAllQuizzes();},[]);const handleTimeUp=()=>{if(!currentQuiz||!currentQuiz.questions){return;}let correctAnswers=0;currentQuiz.questions.forEach((question,index)=>{if(selectedAnswers[index]===question.correctAnswer){correctAnswers++;}});const finalScore=correctAnswers;const percentage=Math.round(finalScore/currentQuiz.questions.length*100);setScore(finalScore);setShowResults(true);saveProgress(currentQuiz.id,{completed:true,score:finalScore,totalQuestions:currentQuiz.questions.length,percentage:percentage,answers:selectedAnswers,timeExpired:true});};const loadProgress=async()=>{try{if(currentUser){const unsubscribe=onSnapshot(collection(db,'users',currentUser.uid,'quizProgress'),querySnapshot=>{const firebaseProgress={};querySnapshot.forEach(doc=>{firebaseProgress[doc.id]=doc.data();});setQuizProgress(firebaseProgress);});return unsubscribe;}else{const savedProgress=localStorage.getItem('quizProgress');if(savedProgress){try{setQuizProgress(JSON.parse(savedProgress));}catch(error){console.error('Eroare la încărcarea progresului din localStorage:',error);}}}}catch(error){console.error('Eroare la încărcarea progresului:',error);}};const saveProgress=async(quizId,progressData)=>{if(!quizId||!progressData){return;}const dataToSave=_objectSpread(_objectSpread({},progressData),{},{timestamp:new Date().toISOString(),userId:(currentUser===null||currentUser===void 0?void 0:currentUser.uid)||'anonymous'});try{if(currentUser){const{doc,setDoc}=await import('firebase/firestore');await setDoc(doc(db,'users',currentUser.uid,'quizProgress',quizId),dataToSave);}else{const updatedProgress=_objectSpread(_objectSpread({},quizProgress),{},{[quizId]:dataToSave});setQuizProgress(updatedProgress);localStorage.setItem('quizProgress',JSON.stringify(updatedProgress));}}catch(error){console.error('Eroare la salvarea progresului:',error);const updatedProgress=_objectSpread(_objectSpread({},quizProgress),{},{[quizId]:dataToSave});setQuizProgress(updatedProgress);localStorage.setItem('quizProgress',JSON.stringify(updatedProgress));}};const startQuiz=quiz=>{setCurrentQuiz(quiz);setCurrentQuestion(0);setSelectedAnswers({});setShowResults(false);setScore(0);setTimeLeft(quiz.timeLimit||600);setTimerActive(true);};const finishQuiz=()=>{if(!currentQuiz||!currentQuiz.questions){return;}setTimerActive(false);let correctAnswers=0;currentQuiz.questions.forEach((question,index)=>{if(selectedAnswers[index]===question.correctAnswer){correctAnswers++;}});const finalScore=correctAnswers;const percentage=Math.round(finalScore/currentQuiz.questions.length*100);setScore(finalScore);setShowResults(true);saveProgress(currentQuiz.id,{completed:true,score:finalScore,totalQuestions:currentQuiz.questions.length,percentage:percentage,answers:selectedAnswers,timeUsed:(currentQuiz.timeLimit||600)-timeLeft});};const resetToHome=()=>{setCurrentQuiz(null);setCurrentQuestion(0);setSelectedAnswers({});setShowResults(false);setScore(0);setTimerActive(false);setTimeLeft(0);};const retryQuiz=()=>{setShowResults(false);setCurrentQuestion(0);setSelectedAnswers({});setScore(0);setTimeLeft(currentQuiz.timeLimit||600);setTimerActive(true);};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"relative min-h-screen\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fixed top-0 left-0 w-full h-full min-h-screen overflow-hidden z-0\",children:/*#__PURE__*/_jsx(Iridescence,{color:[1,1,1],mouseReact:false,amplitude:0.1,speed:0.4})}),/*#__PURE__*/_jsx(\"div\",{className:\"relative z-10 min-h-screen bg-gradient-to-br from-indigo-100/30 via-purple-50/30 to-pink-100/30 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center bg-white/90 backdrop-blur-sm rounded-2xl p-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-16 h-16 border-4 border-purple-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 text-lg\",children:\"Se \\xEEncarc\\u0103 quiz-urile...\"})]})})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"relative min-h-screen\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fixed top-0 left-0 w-full h-full min-h-screen overflow-hidden z-0\",children:/*#__PURE__*/_jsx(Iridescence,{color:[1,1,1],mouseReact:false,amplitude:0.1,speed:0.4})}),/*#__PURE__*/_jsx(\"div\",{className:\"relative z-10 min-h-screen bg-gradient-to-br from-indigo-100/30 via-purple-50/30 to-pink-100/30 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center bg-white/90 backdrop-blur-sm rounded-2xl p-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-6xl mb-4\",children:\"\\u274C\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-red-600 text-xl\",children:error})]})})]});}if(showResults&&currentQuiz){return/*#__PURE__*/_jsxs(\"div\",{className:\"relative min-h-screen\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fixed top-0 left-0 w-full h-full min-h-screen overflow-hidden z-0\",children:/*#__PURE__*/_jsx(Iridescence,{color:[1,1,1],mouseReact:false,amplitude:0.1,speed:0.4})}),/*#__PURE__*/_jsx(\"div\",{className:\"relative z-10\",children:/*#__PURE__*/_jsx(QuizResults,{currentQuiz:currentQuiz,score:score,timeLeft:timeLeft,quizProgress:quizProgress||{},currentUser:currentUser,onRetry:retryQuiz,onHome:resetToHome})})]});}if(currentQuiz){return/*#__PURE__*/_jsxs(\"div\",{className:\"relative min-h-screen\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fixed top-0 left-0 w-full h-full min-h-screen overflow-hidden z-0\",children:/*#__PURE__*/_jsx(Iridescence,{color:[1,1,1],mouseReact:false,amplitude:0.1,speed:0.4})}),/*#__PURE__*/_jsx(\"div\",{className:\"relative z-10 min-h-screen bg-gradient-to-br from-purple-800/20 via-purple-400/20 to-pink-400/20 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-2xl mx-auto\",children:[/*#__PURE__*/_jsx(QuizHeader,{currentQuiz:currentQuiz,currentQuestion:currentQuestion,timeLeft:timeLeft,onClose:resetToHome}),/*#__PURE__*/_jsx(QuizQuestion,{quiz:currentQuiz,currentQuestion:currentQuestion,selectedAnswers:selectedAnswers,onSelectAnswer:answerIndex=>{setSelectedAnswers(prev=>_objectSpread(_objectSpread({},prev),{},{[currentQuestion]:answerIndex}));},onPrevQuestion:()=>setCurrentQuestion(prev=>prev-1),onNextQuestion:()=>setCurrentQuestion(prev=>prev+1),onFinishQuiz:finishQuiz})]})})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"relative min-h-screen\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fixed top-0 left-0 w-full h-full min-h-screen overflow-hidden z-[-1]\",children:/*#__PURE__*/_jsx(Iridescence,{color:[1,1,1],mouseReact:false,amplitude:0.1,speed:0.4})}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative z-10 max-w-6xl mx-auto p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-full flex flex-col lg:flex-row\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-b1 text-center mb-4 w-full lg:w-3/5\",children:\"Alege un quiz \\u0219i testeaz\\u0103-\\u021Bi cuno\\u0219tin\\u021Bele!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mx-auto w-full lg:w-2/6 block\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center lg:justify-between items-center mb-6\",children:currentUser?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 bg-white rounded-lg px-4 py-2 shadow-sm\",children:[currentUser.photoURL&&/*#__PURE__*/_jsx(\"img\",{src:currentUser.photoURL,alt:\"Profile\",className:\"w-8 h-8 rounded-full\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-left\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-800\",children:currentUser.displayName||'Utilizator Google'})})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 bg-yellow-50 rounded-lg px-4 py-2 shadow-sm border border-yellow-200\",children:[/*#__PURE__*/_jsx(User,{size:20,className:\"text-yellow-600\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-left\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-yellow-800\",children:\"Utilizator Anonim\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-yellow-600\",children:\"\\uD83D\\uDCBE Salvare local\\u0103\"})]})]})})}),!currentUser&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-4 bg-blue-50 rounded-lg border border-black max-w-md mx-auto\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-blue-700\",children:[\"\\uD83D\\uDCA1 \",/*#__PURE__*/_jsx(\"strong\",{children:\"Sfat:\"}),\" Autentific\\u0103-te cu Google pentru a sincroniza progresul pe toate dispozitivele!\"]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8\",children:availableQuizzes.map(quiz=>/*#__PURE__*/_jsx(QuizCard,{quiz:quiz,quizProgress:quizProgress||{},onStartQuiz:startQuiz},quiz.id))}),availableQuizzes.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-6xl mb-4\",children:\"\\uD83D\\uDCDD\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-semibold text-gray-600 mb-2\",children:\"Nu s-au g\\u0103sit quiz-uri\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"Verific\\u0103 c\\u0103 fi\\u0219ierele JSON sunt \\xEEn directorul corect.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-12 py-4 border-2 rounded-lg border-black text-black bg-slate-400 w-3/5 mx-auto flex justify-center items-center min-h-[40px]\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCBE Progresul t\\u0103u este salvat \",currentUser?'în contul Google':'local, în browser',\" \\uD83D\\uDCBE\",!currentUser&&' Autentifică-te pentru sincronizare!']})})]})]});};export default QuizApp;","map":{"version":3,"names":["useState","useEffect","User","getFirestore","collection","onSnapshot","useAuth","Iridescence","QuizCard","QuizHeader","QuizQuestion","QuizResults","ContrastSiAccesibilitate","fundamentaleData","psihologia","armonie","design","simboluri","perceptia","temperatura","natura","jsx","_jsx","jsxs","_jsxs","db","QuizApp","currentUser","availableQuizzes","setAvailableQuizzes","currentQuiz","setCurrentQuiz","currentQuestion","setCurrentQuestion","selectedAnswers","setSelectedAnswers","showResults","setShowResults","score","setScore","loading","setLoading","error","setError","quizProgress","setQuizProgress","timeLeft","setTimeLeft","timerActive","setTimerActive","quizDataMap","quizFiles","interval","setInterval","time","handleTimeUp","clearInterval","loadProgress","loadAllQuizzes","quizzesData","fileName","data","push","err","console","concat","questions","correctAnswers","forEach","question","index","correctAnswer","finalScore","percentage","Math","round","length","saveProgress","id","completed","totalQuestions","answers","timeExpired","unsubscribe","uid","querySnapshot","firebaseProgress","doc","savedProgress","localStorage","getItem","JSON","parse","quizId","progressData","dataToSave","_objectSpread","timestamp","Date","toISOString","userId","setDoc","updatedProgress","setItem","stringify","startQuiz","quiz","timeLimit","finishQuiz","timeUsed","resetToHome","retryQuiz","className","children","color","mouseReact","amplitude","speed","onRetry","onHome","onClose","onSelectAnswer","answerIndex","prev","onPrevQuestion","onNextQuestion","onFinishQuiz","photoURL","src","alt","displayName","size","map","onStartQuiz"],"sources":["/workspaces/educational2025/src/Quiz/quiz.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { User } from 'lucide-react';\nimport { getFirestore, collection, onSnapshot } from 'firebase/firestore';\nimport { useAuth } from '../Cont/authContext';\nimport Iridescence from './iridence';\n\nimport QuizCard from './quiz-card';\nimport QuizHeader from './quiz-in-run';\nimport QuizQuestion from './quiz-intrebari';\nimport QuizResults from './rezultate-quiz';\n\nimport ContrastSiAccesibilitate from './Intrebari/contrast_si_accesibilitate.json';\nimport fundamentaleData from './Intrebari/fundamentale.json';\nimport psihologia from './Intrebari/psihologia.json';\nimport armonie from './Intrebari/armonie.json';\nimport design from './Intrebari/design.json';\nimport simboluri from './Intrebari/simboluri.json';\nimport perceptia from './Intrebari/perceptia.json';\nimport temperatura from './Intrebari/temperatura.json';\nimport natura from './Intrebari/natura.json';\n\nconst db = getFirestore();\n\nconst QuizApp = () => {\n  const { currentUser } = useAuth();\n  \n  const [availableQuizzes, setAvailableQuizzes] = useState([]);\n  const [currentQuiz, setCurrentQuiz] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [quizProgress, setQuizProgress] = useState({});\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [timerActive, setTimerActive] = useState(false);\n\n  const quizDataMap = {\n    'fundamentale.json': fundamentaleData,\n    'contrast_si_accesibilitate.json': ContrastSiAccesibilitate,\n    'psihologia.json': psihologia,\n    'armonie.json': armonie,\n    'design.json': design,\n    'simboluri.json': simboluri,\n    'perceptia.json': perceptia,\n    'temperatura.json': temperatura,\n    'natura.json': natura,\n  };\n\n  const quizFiles = [\n    'fundamentale.json',\n    'contrast_si_accesibilitate.json',\n    'psihologia.json',\n    'armonie.json',\n    'design.json',\n    'simboluri.json',\n    'perceptia.json',\n    'temperatura.json',\n    'natura.json',\n  ];\n\n  \n  useEffect(() => {\n    let interval = null;\n    \n    if (timerActive && timeLeft > 0) {\n      interval = setInterval(() => {\n        setTimeLeft(time => {\n          if (time <= 1) {\n            setTimerActive(false);\n            handleTimeUp();\n            return 0;\n          }\n          return time - 1;\n        });\n      }, 1000);\n    } else if (timeLeft === 0 && timerActive) {\n      setTimerActive(false);\n    }\n    \n    return () => clearInterval(interval);\n  }, [timerActive, timeLeft]);\n\n \n  useEffect(() => {\n    loadProgress();\n  }, [currentUser]);\n\n\n  useEffect(() => {\n    const loadAllQuizzes = async () => {\n      try {\n        const quizzesData = [];\n        \n        for (const fileName of quizFiles) {\n          try {\n            const data = quizDataMap[fileName];\n            if (data) {\n              quizzesData.push(data);\n            }\n          } catch (err) {\n            console.error(`Eroare la încărcarea ${fileName}:`, err);\n          }\n        }\n        \n        setAvailableQuizzes(quizzesData);\n        setLoading(false);\n      } catch (err) {\n        setError('Eroare la încărcarea quiz-urilor');\n        setLoading(false);\n      }\n    };\n\n    loadAllQuizzes();\n  }, []);\n\n  const handleTimeUp = () => {\n   \n    if (!currentQuiz || !currentQuiz.questions) {\n      return;\n    }\n\n    let correctAnswers = 0;\n    currentQuiz.questions.forEach((question, index) => {\n      if (selectedAnswers[index] === question.correctAnswer) {\n        correctAnswers++;\n      }\n    });\n    \n    const finalScore = correctAnswers;\n    const percentage = Math.round((finalScore / currentQuiz.questions.length) * 100);\n    \n    setScore(finalScore);\n    setShowResults(true);\n    \n    saveProgress(currentQuiz.id, {\n      completed: true,\n      score: finalScore,\n      totalQuestions: currentQuiz.questions.length,\n      percentage: percentage,\n      answers: selectedAnswers,\n      timeExpired: true\n    });\n  };\n\n  const loadProgress = async () => {\n    try {\n      if (currentUser) {\n        const unsubscribe = onSnapshot(\n          collection(db, 'users', currentUser.uid, 'quizProgress'),\n          (querySnapshot) => {\n            const firebaseProgress = {};\n            querySnapshot.forEach((doc) => {\n              firebaseProgress[doc.id] = doc.data();\n            });\n            setQuizProgress(firebaseProgress);\n          }\n        );\n        return unsubscribe;\n      } else {\n        const savedProgress = localStorage.getItem('quizProgress');\n        if (savedProgress) {\n          try {\n            setQuizProgress(JSON.parse(savedProgress));\n          } catch (error) {\n            console.error('Eroare la încărcarea progresului din localStorage:', error);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Eroare la încărcarea progresului:', error);\n    }\n  };\n\n  const saveProgress = async (quizId, progressData) => {\n    if (!quizId || !progressData) {\n      return;\n    }\n\n    const dataToSave = {\n      ...progressData,\n      timestamp: new Date().toISOString(),\n      userId: currentUser?.uid || 'anonymous'\n    };\n    \n    try {\n      if (currentUser) {\n        const { doc, setDoc } = await import('firebase/firestore');\n        await setDoc(doc(db, 'users', currentUser.uid, 'quizProgress', quizId), dataToSave);\n      } else {\n        const updatedProgress = {\n          ...quizProgress,\n          [quizId]: dataToSave\n        };\n        \n        setQuizProgress(updatedProgress);\n        localStorage.setItem('quizProgress', JSON.stringify(updatedProgress));\n      }\n    } catch (error) {\n      console.error('Eroare la salvarea progresului:', error);\n      const updatedProgress = {\n        ...quizProgress,\n        [quizId]: dataToSave\n      };\n      \n      setQuizProgress(updatedProgress);\n      localStorage.setItem('quizProgress', JSON.stringify(updatedProgress));\n    }\n  };\n\n  const startQuiz = (quiz) => {\n    setCurrentQuiz(quiz);\n    setCurrentQuestion(0);\n    setSelectedAnswers({});\n    setShowResults(false);\n    setScore(0);\n    setTimeLeft(quiz.timeLimit || 600);\n    setTimerActive(true);\n  };\n\n  const finishQuiz = () => {\n   \n    if (!currentQuiz || !currentQuiz.questions) {\n      return;\n    }\n\n    setTimerActive(false);\n    \n    let correctAnswers = 0;\n    currentQuiz.questions.forEach((question, index) => {\n      if (selectedAnswers[index] === question.correctAnswer) {\n        correctAnswers++;\n      }\n    });\n    \n    const finalScore = correctAnswers;\n    const percentage = Math.round((finalScore / currentQuiz.questions.length) * 100);\n    \n    setScore(finalScore);\n    setShowResults(true);\n    \n    saveProgress(currentQuiz.id, {\n      completed: true,\n      score: finalScore,\n      totalQuestions: currentQuiz.questions.length,\n      percentage: percentage,\n      answers: selectedAnswers,\n      timeUsed: (currentQuiz.timeLimit || 600) - timeLeft\n    });\n  };\n\n  const resetToHome = () => {\n    setCurrentQuiz(null);\n    setCurrentQuestion(0);\n    setSelectedAnswers({});\n    setShowResults(false);\n    setScore(0);\n    setTimerActive(false);\n    setTimeLeft(0);\n  };\n\n  const retryQuiz = () => {\n    setShowResults(false);\n    setCurrentQuestion(0);\n    setSelectedAnswers({});\n    setScore(0);\n    setTimeLeft(currentQuiz.timeLimit || 600);\n    setTimerActive(true);\n  };\n\n  \n  if (loading) {\n    return (\n      <div className=\"relative min-h-screen\">\n        <div className=\"fixed top-0 left-0 w-full h-full min-h-screen overflow-hidden z-0\">\n          <Iridescence\n            color={[1, 1, 1]}\n            mouseReact={false}\n            amplitude={0.1}\n            speed={0.4}\n          />\n        </div>\n        <div className=\"relative z-10 min-h-screen bg-gradient-to-br from-indigo-100/30 via-purple-50/30 to-pink-100/30 flex items-center justify-center\">\n          <div className=\"text-center bg-white/90 backdrop-blur-sm rounded-2xl p-8\">\n            <div className=\"w-16 h-16 border-4 border-purple-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n            <p className=\"text-gray-600 text-lg\">Se încarcă quiz-urile...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"relative min-h-screen\">\n        <div className=\"fixed top-0 left-0 w-full h-full min-h-screen overflow-hidden z-0\">\n          <Iridescence\n            color={[1, 1, 1]}\n            mouseReact={false}\n            amplitude={0.1}\n            speed={0.4}\n          />\n        </div>\n        <div className=\"relative z-10 min-h-screen bg-gradient-to-br from-indigo-100/30 via-purple-50/30 to-pink-100/30 flex items-center justify-center\">\n          <div className=\"text-center bg-white/90 backdrop-blur-sm rounded-2xl p-8\">\n            <div className=\"text-6xl mb-4\">❌</div>\n            <p className=\"text-red-600 text-xl\">{error}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n  if (showResults && currentQuiz) {\n    return (\n      <div className=\"relative min-h-screen\">\n        <div className=\"fixed top-0 left-0 w-full h-full min-h-screen overflow-hidden z-0\">\n          <Iridescence\n            color={[1, 1, 1]}\n            mouseReact={false}\n            amplitude={0.1}\n            speed={0.4}\n          />\n        </div>\n        <div className=\"relative z-10\">\n          <QuizResults\n            currentQuiz={currentQuiz}\n            score={score}\n            timeLeft={timeLeft}\n            quizProgress={quizProgress || {}}\n            currentUser={currentUser}\n            onRetry={retryQuiz}\n            onHome={resetToHome}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  \n  if (currentQuiz) {\n    return (\n      <div className=\"relative min-h-screen\">\n        <div className=\"fixed top-0 left-0 w-full h-full min-h-screen overflow-hidden z-0\">\n          <Iridescence\n            color={[1, 1, 1]}\n            mouseReact={false}\n            amplitude={0.1}\n            speed={0.4}\n          />\n        </div>\n        <div className=\"relative z-10 min-h-screen bg-gradient-to-br from-purple-800/20 via-purple-400/20 to-pink-400/20 p-4\">\n          <div className=\"max-w-2xl mx-auto\">\n            <QuizHeader\n              currentQuiz={currentQuiz}\n              currentQuestion={currentQuestion}\n              timeLeft={timeLeft}\n              onClose={resetToHome}\n            />\n            \n            <QuizQuestion\n              quiz={currentQuiz}\n              currentQuestion={currentQuestion}\n              selectedAnswers={selectedAnswers}\n              onSelectAnswer={(answerIndex) => {\n                setSelectedAnswers(prev => ({\n                  ...prev,\n                  [currentQuestion]: answerIndex\n                }));\n              }}\n              onPrevQuestion={() => setCurrentQuestion(prev => prev - 1)}\n              onNextQuestion={() => setCurrentQuestion(prev => prev + 1)}\n              onFinishQuiz={finishQuiz}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n  return (\n    <div className=\"relative min-h-screen\">\n      <div className=\"fixed top-0 left-0 w-full h-full min-h-screen overflow-hidden z-[-1]\">\n        <Iridescence\n          color={[1, 1, 1]}\n          mouseReact={false}\n          amplitude={0.1}\n          speed={0.4}\n        />\n      </div>\n\n      <div className=\"relative z-10 max-w-6xl mx-auto p-4\">\n        <div className='w-full flex flex-col lg:flex-row'>\n          <h1 className=\"text-2xl font-bold text-b1 text-center mb-4 w-full lg:w-3/5\">\n            Alege un quiz și testează-ți cunoștințele! \n          </h1> \n          \n          <div className=\"text-center mx-auto w-full lg:w-2/6 block\">\n            <div className=\"flex justify-center lg:justify-between items-center mb-6\">\n              {currentUser ? (\n                <div className=\"flex items-center space-x-3 bg-white rounded-lg px-4 py-2 shadow-sm\">\n                  {currentUser.photoURL && (\n                    <img \n                      src={currentUser.photoURL} \n                      alt=\"Profile\" \n                      className=\"w-8 h-8 rounded-full\"\n                    />\n                  )}\n                  <div className=\"text-left\">\n                    <div className=\"text-sm font-medium text-gray-800\">\n                      {currentUser.displayName || 'Utilizator Google'}\n                    </div>\n                   \n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex items-center space-x-3 bg-yellow-50 rounded-lg px-4 py-2 shadow-sm border border-yellow-200\">\n                  <User size={20} className=\"text-yellow-600\" />\n                  <div className=\"text-left\">\n                    <div className=\"text-sm font-medium text-yellow-800\">\n                      Utilizator Anonim\n                    </div>\n                    <div className=\"text-xs text-yellow-600\">\n                      💾 Salvare locală\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {!currentUser && (\n            <div className=\"mt-4 p-4 bg-blue-50 rounded-lg border border-black max-w-md mx-auto\">\n              <p className=\"text-sm text-blue-700\">\n                💡 <strong>Sfat:</strong> Autentifică-te cu Google pentru a sincroniza progresul pe toate dispozitivele!\n              </p>\n            </div>\n          )}\n        </div>\n\n       \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8\">\n          {availableQuizzes.map((quiz) => (\n            <QuizCard\n              key={quiz.id}\n              quiz={quiz}\n              quizProgress={quizProgress || {}}\n              onStartQuiz={startQuiz}\n            />\n          ))}\n        </div>\n\n        {availableQuizzes.length === 0 && (\n          <div className=\"text-center py-12\">\n            <div className=\"text-6xl mb-4\">📝</div>\n            <h3 className=\"text-2xl font-semibold text-gray-600 mb-2\">Nu s-au găsit quiz-uri</h3>\n            <p className=\"text-gray-500\">Verifică că fișierele JSON sunt în directorul corect.</p>\n          </div>\n        )}\n\n      \n       <div className=\"text-center mt-12 py-4 border-2 rounded-lg border-black text-black bg-slate-400 w-3/5 mx-auto flex justify-center items-center min-h-[40px]\">           \n  <p>💾 Progresul tău este salvat {currentUser ? 'în contul Google' : 'local, în browser'} 💾            \n    {!currentUser && ' Autentifică-te pentru sincronizare!'}\n  </p>         \n\n</div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}